#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicePleaseServiceLibrary.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ServiceTech")]
	public partial class ServicePleaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplicationType(ApplicationType instance);
    partial void UpdateApplicationType(ApplicationType instance);
    partial void DeleteApplicationType(ApplicationType instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertBlobEntry(BlobEntry instance);
    partial void UpdateBlobEntry(BlobEntry instance);
    partial void DeleteBlobEntry(BlobEntry instance);
    partial void InsertBlobType(BlobType instance);
    partial void UpdateBlobType(BlobType instance);
    partial void DeleteBlobType(BlobType instance);
    partial void InsertDailyRecapAudit(DailyRecapAudit instance);
    partial void UpdateDailyRecapAudit(DailyRecapAudit instance);
    partial void DeleteDailyRecapAudit(DailyRecapAudit instance);
    partial void InsertFeature(Feature instance);
    partial void UpdateFeature(Feature instance);
    partial void DeleteFeature(Feature instance);
    partial void InsertFeatureRole(FeatureRole instance);
    partial void UpdateFeatureRole(FeatureRole instance);
    partial void DeleteFeatureRole(FeatureRole instance);
    partial void InsertFeatureType(FeatureType instance);
    partial void UpdateFeatureType(FeatureType instance);
    partial void DeleteFeatureType(FeatureType instance);
    partial void InsertIntervalType(IntervalType instance);
    partial void UpdateIntervalType(IntervalType instance);
    partial void DeleteIntervalType(IntervalType instance);
    partial void InsertLikeUnlike(LikeUnlike instance);
    partial void UpdateLikeUnlike(LikeUnlike instance);
    partial void DeleteLikeUnlike(LikeUnlike instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertLocationInfo(LocationInfo instance);
    partial void UpdateLocationInfo(LocationInfo instance);
    partial void DeleteLocationInfo(LocationInfo instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertProblem(Problem instance);
    partial void UpdateProblem(Problem instance);
    partial void DeleteProblem(Problem instance);
    partial void InsertProblemBlob(ProblemBlob instance);
    partial void UpdateProblemBlob(ProblemBlob instance);
    partial void DeleteProblemBlob(ProblemBlob instance);
    partial void InsertRecapSetting(RecapSetting instance);
    partial void UpdateRecapSetting(RecapSetting instance);
    partial void DeleteRecapSetting(RecapSetting instance);
    partial void InsertRecapSettingCategory(RecapSettingCategory instance);
    partial void UpdateRecapSettingCategory(RecapSettingCategory instance);
    partial void DeleteRecapSettingCategory(RecapSettingCategory instance);
    partial void InsertRecapSettingDay(RecapSettingDay instance);
    partial void UpdateRecapSettingDay(RecapSettingDay instance);
    partial void DeleteRecapSettingDay(RecapSettingDay instance);
    partial void InsertRecapSettingLocation(RecapSettingLocation instance);
    partial void UpdateRecapSettingLocation(RecapSettingLocation instance);
    partial void DeleteRecapSettingLocation(RecapSettingLocation instance);
    partial void InsertRecapSettingUser(RecapSettingUser instance);
    partial void UpdateRecapSettingUser(RecapSettingUser instance);
    partial void DeleteRecapSettingUser(RecapSettingUser instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertServicePlanInfo(ServicePlanInfo instance);
    partial void UpdateServicePlanInfo(ServicePlanInfo instance);
    partial void DeleteServicePlanInfo(ServicePlanInfo instance);
    partial void InsertServicePlanType(ServicePlanType instance);
    partial void UpdateServicePlanType(ServicePlanType instance);
    partial void DeleteServicePlanType(ServicePlanType instance);
    partial void InsertSnooze(Snooze instance);
    partial void UpdateSnooze(Snooze instance);
    partial void DeleteSnooze(Snooze instance);
    partial void InsertSnoozedTicket(SnoozedTicket instance);
    partial void UpdateSnoozedTicket(SnoozedTicket instance);
    partial void DeleteSnoozedTicket(SnoozedTicket instance);
    partial void InsertSnoozeReason(SnoozeReason instance);
    partial void UpdateSnoozeReason(SnoozeReason instance);
    partial void DeleteSnoozeReason(SnoozeReason instance);
    partial void InsertSolution(Solution instance);
    partial void UpdateSolution(Solution instance);
    partial void DeleteSolution(Solution instance);
    partial void InsertSolutionBlob(SolutionBlob instance);
    partial void UpdateSolutionBlob(SolutionBlob instance);
    partial void DeleteSolutionBlob(SolutionBlob instance);
    partial void InsertSystemConfig(SystemConfig instance);
    partial void UpdateSystemConfig(SystemConfig instance);
    partial void DeleteSystemConfig(SystemConfig instance);
    partial void InsertUserOrganization(UserOrganization instance);
    partial void UpdateUserOrganization(UserOrganization instance);
    partial void DeleteUserOrganization(UserOrganization instance);
    partial void InsertErrorDetail(ErrorDetail instance);
    partial void UpdateErrorDetail(ErrorDetail instance);
    partial void DeleteErrorDetail(ErrorDetail instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertRolePermission(RolePermission instance);
    partial void UpdateRolePermission(RolePermission instance);
    partial void DeleteRolePermission(RolePermission instance);
    partial void InsertSnoozeAudit(SnoozeAudit instance);
    partial void UpdateSnoozeAudit(SnoozeAudit instance);
    partial void DeleteSnoozeAudit(SnoozeAudit instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertRolePermission1(RolePermission1 instance);
    partial void UpdateRolePermission1(RolePermission1 instance);
    partial void DeleteRolePermission1(RolePermission1 instance);
    partial void InsertPermission1(Permission1 instance);
    partial void UpdatePermission1(Permission1 instance);
    partial void DeletePermission1(Permission1 instance);
    partial void InsertTicketComment(TicketComment instance);
    partial void UpdateTicketComment(TicketComment instance);
    partial void DeleteTicketComment(TicketComment instance);
    partial void InsertDeviceDetail(DeviceDetail instance);
    partial void UpdateDeviceDetail(DeviceDetail instance);
    partial void DeleteDeviceDetail(DeviceDetail instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertDailyRecap(DailyRecap instance);
    partial void UpdateDailyRecap(DailyRecap instance);
    partial void DeleteDailyRecap(DailyRecap instance);
    #endregion
		
		public ServicePleaseDataContext() : 
				base(global::ServicePleaseServiceLibrary.Properties.Settings.Default.ServiceTechConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServicePleaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServicePleaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServicePleaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServicePleaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ApplicationType> ApplicationTypes
		{
			get
			{
				return this.GetTable<ApplicationType>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<BlobEntry> BlobEntries
		{
			get
			{
				return this.GetTable<BlobEntry>();
			}
		}
		
		public System.Data.Linq.Table<BlobType> BlobTypes
		{
			get
			{
				return this.GetTable<BlobType>();
			}
		}
		
		public System.Data.Linq.Table<DailyRecapAudit> DailyRecapAudits
		{
			get
			{
				return this.GetTable<DailyRecapAudit>();
			}
		}
		
		public System.Data.Linq.Table<Feature> Features
		{
			get
			{
				return this.GetTable<Feature>();
			}
		}
		
		public System.Data.Linq.Table<FeatureRole> FeatureRoles
		{
			get
			{
				return this.GetTable<FeatureRole>();
			}
		}
		
		public System.Data.Linq.Table<FeatureType> FeatureTypes
		{
			get
			{
				return this.GetTable<FeatureType>();
			}
		}
		
		public System.Data.Linq.Table<IntervalType> IntervalTypes
		{
			get
			{
				return this.GetTable<IntervalType>();
			}
		}
		
		public System.Data.Linq.Table<LikeUnlike> LikeUnlikes
		{
			get
			{
				return this.GetTable<LikeUnlike>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<LocationInfo> LocationInfos
		{
			get
			{
				return this.GetTable<LocationInfo>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<Problem> Problems
		{
			get
			{
				return this.GetTable<Problem>();
			}
		}
		
		public System.Data.Linq.Table<ProblemBlob> ProblemBlobs
		{
			get
			{
				return this.GetTable<ProblemBlob>();
			}
		}
		
		public System.Data.Linq.Table<RecapSetting> RecapSettings
		{
			get
			{
				return this.GetTable<RecapSetting>();
			}
		}
		
		public System.Data.Linq.Table<RecapSettingCategory> RecapSettingCategories
		{
			get
			{
				return this.GetTable<RecapSettingCategory>();
			}
		}
		
		public System.Data.Linq.Table<RecapSettingDay> RecapSettingDays
		{
			get
			{
				return this.GetTable<RecapSettingDay>();
			}
		}
		
		public System.Data.Linq.Table<RecapSettingLocation> RecapSettingLocations
		{
			get
			{
				return this.GetTable<RecapSettingLocation>();
			}
		}
		
		public System.Data.Linq.Table<RecapSettingUser> RecapSettingUsers
		{
			get
			{
				return this.GetTable<RecapSettingUser>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<ServicePlanInfo> ServicePlanInfos
		{
			get
			{
				return this.GetTable<ServicePlanInfo>();
			}
		}
		
		public System.Data.Linq.Table<ServicePlanType> ServicePlanTypes
		{
			get
			{
				return this.GetTable<ServicePlanType>();
			}
		}
		
		public System.Data.Linq.Table<Snooze> Snoozes
		{
			get
			{
				return this.GetTable<Snooze>();
			}
		}
		
		public System.Data.Linq.Table<SnoozedTicket> SnoozedTickets
		{
			get
			{
				return this.GetTable<SnoozedTicket>();
			}
		}
		
		public System.Data.Linq.Table<SnoozeReason> SnoozeReasons
		{
			get
			{
				return this.GetTable<SnoozeReason>();
			}
		}
		
		public System.Data.Linq.Table<Solution> Solutions
		{
			get
			{
				return this.GetTable<Solution>();
			}
		}
		
		public System.Data.Linq.Table<SolutionBlob> SolutionBlobs
		{
			get
			{
				return this.GetTable<SolutionBlob>();
			}
		}
		
		public System.Data.Linq.Table<SystemConfig> SystemConfigs
		{
			get
			{
				return this.GetTable<SystemConfig>();
			}
		}
		
		public System.Data.Linq.Table<UserOrganization> UserOrganizations
		{
			get
			{
				return this.GetTable<UserOrganization>();
			}
		}
		
		public System.Data.Linq.Table<ErrorDetail> ErrorDetails
		{
			get
			{
				return this.GetTable<ErrorDetail>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<RolePermission> RolePermissions
		{
			get
			{
				return this.GetTable<RolePermission>();
			}
		}
		
		public System.Data.Linq.Table<SnoozeAudit> SnoozeAudits
		{
			get
			{
				return this.GetTable<SnoozeAudit>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<RolePermission1> RolePermission1s
		{
			get
			{
				return this.GetTable<RolePermission1>();
			}
		}
		
		public System.Data.Linq.Table<Permission1> Permission1s
		{
			get
			{
				return this.GetTable<Permission1>();
			}
		}
		
		public System.Data.Linq.Table<TicketComment> TicketComments
		{
			get
			{
				return this.GetTable<TicketComment>();
			}
		}
		
		public System.Data.Linq.Table<DeviceDetail> DeviceDetails
		{
			get
			{
				return this.GetTable<DeviceDetail>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<DailyRecap> DailyRecaps
		{
			get
			{
				return this.GetTable<DailyRecap>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="SvcTrkUser.SP_ProblemBlobIcon")]
		public ISingleResult<SP_ProblemBlobIconResult> SP_ProblemBlobIcon([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> ticketId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId);
			return ((ISingleResult<SP_ProblemBlobIconResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="SvcTrkUser.SP_SolutionBlobIcon")]
		public ISingleResult<SP_SolutionBlobIconResult> SP_SolutionBlobIcon([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> ticketId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticketId);
			return ((ISingleResult<SP_SolutionBlobIconResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.ApplicationType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ApplicationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationTypeId;
		
		private string _Name;
		
		private string _CreateDate;
		
		private string _EditDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationTypeIdChanging(System.Guid value);
    partial void OnApplicationTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public ApplicationType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ApplicationTypeId
		{
			get
			{
				return this._ApplicationTypeId;
			}
			set
			{
				if ((this._ApplicationTypeId != value))
				{
					this.OnApplicationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationTypeId = value;
					this.SendPropertyChanged("ApplicationTypeId");
					this.OnApplicationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.UserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserRoleId;
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserRoleIdChanging(System.Guid value);
    partial void OnUserRoleIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public UserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UserRoleId
		{
			get
			{
				return this._UserRoleId;
			}
			set
			{
				if ((this._UserRoleId != value))
				{
					this.OnUserRoleIdChanging(value);
					this.SendPropertyChanging();
					this._UserRoleId = value;
					this.SendPropertyChanged("UserRoleId");
					this.OnUserRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.BlobEntry")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlobEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BlobId;
		
		private System.Nullable<System.Guid> _BlobTypeId;
		
		private System.Data.Linq.Binary _Blob;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<ProblemBlob> _ProblemBlobs;
		
		private EntitySet<SolutionBlob> _SolutionBlobs;
		
		private EntityRef<BlobType> _BlobType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlobIdChanging(System.Guid value);
    partial void OnBlobIdChanged();
    partial void OnBlobTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnBlobTypeIdChanged();
    partial void OnBlobChanging(System.Data.Linq.Binary value);
    partial void OnBlobChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public BlobEntry()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid BlobId
		{
			get
			{
				return this._BlobId;
			}
			set
			{
				if ((this._BlobId != value))
				{
					this.OnBlobIdChanging(value);
					this.SendPropertyChanging();
					this._BlobId = value;
					this.SendPropertyChanged("BlobId");
					this.OnBlobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobTypeId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> BlobTypeId
		{
			get
			{
				return this._BlobTypeId;
			}
			set
			{
				if ((this._BlobTypeId != value))
				{
					if (this._BlobType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlobTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BlobTypeId = value;
					this.SendPropertyChanged("BlobTypeId");
					this.OnBlobTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blob", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Data.Linq.Binary Blob
		{
			get
			{
				return this._Blob;
			}
			set
			{
				if ((this._Blob != value))
				{
					this.OnBlobChanging(value);
					this.SendPropertyChanging();
					this._Blob = value;
					this.SendPropertyChanged("Blob");
					this.OnBlobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlobEntry_ProblemBlob", Storage="_ProblemBlobs", ThisKey="BlobId", OtherKey="BlobId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ProblemBlob> ProblemBlobs
		{
			get
			{
				if ((this.serializing 
							&& (this._ProblemBlobs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProblemBlobs;
			}
			set
			{
				this._ProblemBlobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlobEntry_SolutionBlob", Storage="_SolutionBlobs", ThisKey="BlobId", OtherKey="BlobId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<SolutionBlob> SolutionBlobs
		{
			get
			{
				if ((this.serializing 
							&& (this._SolutionBlobs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SolutionBlobs;
			}
			set
			{
				this._SolutionBlobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlobType_BlobEntry", Storage="_BlobType", ThisKey="BlobTypeId", OtherKey="BlobTypeId", IsForeignKey=true)]
		public BlobType BlobType
		{
			get
			{
				return this._BlobType.Entity;
			}
			set
			{
				BlobType previousValue = this._BlobType.Entity;
				if (((previousValue != value) 
							|| (this._BlobType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlobType.Entity = null;
						previousValue.BlobEntries.Remove(this);
					}
					this._BlobType.Entity = value;
					if ((value != null))
					{
						value.BlobEntries.Add(this);
						this._BlobTypeId = value.BlobTypeId;
					}
					else
					{
						this._BlobTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("BlobType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProblemBlobs(ProblemBlob entity)
		{
			this.SendPropertyChanging();
			entity.BlobEntry = this;
		}
		
		private void detach_ProblemBlobs(ProblemBlob entity)
		{
			this.SendPropertyChanging();
			entity.BlobEntry = null;
		}
		
		private void attach_SolutionBlobs(SolutionBlob entity)
		{
			this.SendPropertyChanging();
			entity.BlobEntry = this;
		}
		
		private void detach_SolutionBlobs(SolutionBlob entity)
		{
			this.SendPropertyChanging();
			entity.BlobEntry = null;
		}
		
		private void Initialize()
		{
			this._ProblemBlobs = new EntitySet<ProblemBlob>(new Action<ProblemBlob>(this.attach_ProblemBlobs), new Action<ProblemBlob>(this.detach_ProblemBlobs));
			this._SolutionBlobs = new EntitySet<SolutionBlob>(new Action<SolutionBlob>(this.attach_SolutionBlobs), new Action<SolutionBlob>(this.detach_SolutionBlobs));
			this._BlobType = default(EntityRef<BlobType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.BlobType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlobType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BlobTypeId;
		
		private string _TypeName;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<BlobEntry> _BlobEntries;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlobTypeIdChanging(System.Guid value);
    partial void OnBlobTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public BlobType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid BlobTypeId
		{
			get
			{
				return this._BlobTypeId;
			}
			set
			{
				if ((this._BlobTypeId != value))
				{
					this.OnBlobTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BlobTypeId = value;
					this.SendPropertyChanged("BlobTypeId");
					this.OnBlobTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlobType_BlobEntry", Storage="_BlobEntries", ThisKey="BlobTypeId", OtherKey="BlobTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<BlobEntry> BlobEntries
		{
			get
			{
				if ((this.serializing 
							&& (this._BlobEntries.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BlobEntries;
			}
			set
			{
				this._BlobEntries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlobEntries(BlobEntry entity)
		{
			this.SendPropertyChanging();
			entity.BlobType = this;
		}
		
		private void detach_BlobEntries(BlobEntry entity)
		{
			this.SendPropertyChanging();
			entity.BlobType = null;
		}
		
		private void Initialize()
		{
			this._BlobEntries = new EntitySet<BlobEntry>(new Action<BlobEntry>(this.attach_BlobEntries), new Action<BlobEntry>(this.detach_BlobEntries));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.DailyRecapAudit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DailyRecapAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DailyRecapAuditId;
		
		private System.Nullable<System.Guid> _RecapSettingId;
		
		private string _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDailyRecapAuditIdChanging(System.Guid value);
    partial void OnDailyRecapAuditIdChanged();
    partial void OnRecapSettingIdChanging(System.Nullable<System.Guid> value);
    partial void OnRecapSettingIdChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    #endregion
		
		public DailyRecapAudit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRecapAuditId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid DailyRecapAuditId
		{
			get
			{
				return this._DailyRecapAuditId;
			}
			set
			{
				if ((this._DailyRecapAuditId != value))
				{
					this.OnDailyRecapAuditIdChanging(value);
					this.SendPropertyChanging();
					this._DailyRecapAuditId = value;
					this.SendPropertyChanged("DailyRecapAuditId");
					this.OnDailyRecapAuditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> RecapSettingId
		{
			get
			{
				return this._RecapSettingId;
			}
			set
			{
				if ((this._RecapSettingId != value))
				{
					this.OnRecapSettingIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingId = value;
					this.SendPropertyChanged("RecapSettingId");
					this.OnRecapSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Feature")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Feature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FeatureId;
		
		private string _Name;
		
		private System.Guid _FeatureType;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<FeatureRole> _FeatureRoles;
		
		private EntityRef<FeatureType> _FeatureType1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureIdChanging(System.Guid value);
    partial void OnFeatureIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFeatureTypeChanging(System.Guid value);
    partial void OnFeatureTypeChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public Feature()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid FeatureId
		{
			get
			{
				return this._FeatureId;
			}
			set
			{
				if ((this._FeatureId != value))
				{
					this.OnFeatureIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureId = value;
					this.SendPropertyChanged("FeatureId");
					this.OnFeatureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureType", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid FeatureType
		{
			get
			{
				return this._FeatureType;
			}
			set
			{
				if ((this._FeatureType != value))
				{
					if (this._FeatureType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeatureTypeChanging(value);
					this.SendPropertyChanging();
					this._FeatureType = value;
					this.SendPropertyChanged("FeatureType");
					this.OnFeatureTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feature_FeatureRole", Storage="_FeatureRoles", ThisKey="FeatureId", OtherKey="FeatureId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<FeatureRole> FeatureRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._FeatureRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FeatureRoles;
			}
			set
			{
				this._FeatureRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeatureType_Feature", Storage="_FeatureType1", ThisKey="FeatureType", OtherKey="FeatureTypeId", IsForeignKey=true)]
		public FeatureType FeatureType1
		{
			get
			{
				return this._FeatureType1.Entity;
			}
			set
			{
				FeatureType previousValue = this._FeatureType1.Entity;
				if (((previousValue != value) 
							|| (this._FeatureType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeatureType1.Entity = null;
						previousValue.Features.Remove(this);
					}
					this._FeatureType1.Entity = value;
					if ((value != null))
					{
						value.Features.Add(this);
						this._FeatureType = value.FeatureTypeId;
					}
					else
					{
						this._FeatureType = default(System.Guid);
					}
					this.SendPropertyChanged("FeatureType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeatureRoles(FeatureRole entity)
		{
			this.SendPropertyChanging();
			entity.Feature = this;
		}
		
		private void detach_FeatureRoles(FeatureRole entity)
		{
			this.SendPropertyChanging();
			entity.Feature = null;
		}
		
		private void Initialize()
		{
			this._FeatureRoles = new EntitySet<FeatureRole>(new Action<FeatureRole>(this.attach_FeatureRoles), new Action<FeatureRole>(this.detach_FeatureRoles));
			this._FeatureType1 = default(EntityRef<FeatureType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.FeatureRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FeatureRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FeatureRoleId;
		
		private System.Guid _FeatureId;
		
		private System.Guid _RoleId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Feature> _Feature;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureRoleIdChanging(System.Guid value);
    partial void OnFeatureRoleIdChanged();
    partial void OnFeatureIdChanging(System.Guid value);
    partial void OnFeatureIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public FeatureRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureRoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid FeatureRoleId
		{
			get
			{
				return this._FeatureRoleId;
			}
			set
			{
				if ((this._FeatureRoleId != value))
				{
					this.OnFeatureRoleIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureRoleId = value;
					this.SendPropertyChanged("FeatureRoleId");
					this.OnFeatureRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid FeatureId
		{
			get
			{
				return this._FeatureId;
			}
			set
			{
				if ((this._FeatureId != value))
				{
					if (this._Feature.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeatureIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureId = value;
					this.SendPropertyChanged("FeatureId");
					this.OnFeatureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feature_FeatureRole", Storage="_Feature", ThisKey="FeatureId", OtherKey="FeatureId", IsForeignKey=true)]
		public Feature Feature
		{
			get
			{
				return this._Feature.Entity;
			}
			set
			{
				Feature previousValue = this._Feature.Entity;
				if (((previousValue != value) 
							|| (this._Feature.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feature.Entity = null;
						previousValue.FeatureRoles.Remove(this);
					}
					this._Feature.Entity = value;
					if ((value != null))
					{
						value.FeatureRoles.Add(this);
						this._FeatureId = value.FeatureId;
					}
					else
					{
						this._FeatureId = default(System.Guid);
					}
					this.SendPropertyChanged("Feature");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_FeatureRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.FeatureRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.FeatureRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Feature = default(EntityRef<Feature>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.FeatureType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FeatureType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _FeatureTypeId;
		
		private string _TypeName;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<Feature> _Features;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureTypeIdChanging(System.Guid value);
    partial void OnFeatureTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public FeatureType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid FeatureTypeId
		{
			get
			{
				return this._FeatureTypeId;
			}
			set
			{
				if ((this._FeatureTypeId != value))
				{
					this.OnFeatureTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureTypeId = value;
					this.SendPropertyChanged("FeatureTypeId");
					this.OnFeatureTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeatureType_Feature", Storage="_Features", ThisKey="FeatureTypeId", OtherKey="FeatureType")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Feature> Features
		{
			get
			{
				if ((this.serializing 
							&& (this._Features.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Features;
			}
			set
			{
				this._Features.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Features(Feature entity)
		{
			this.SendPropertyChanging();
			entity.FeatureType1 = this;
		}
		
		private void detach_Features(Feature entity)
		{
			this.SendPropertyChanging();
			entity.FeatureType1 = null;
		}
		
		private void Initialize()
		{
			this._Features = new EntitySet<Feature>(new Action<Feature>(this.attach_Features), new Action<Feature>(this.detach_Features));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.IntervalType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class IntervalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IntervalTypeId;
		
		private string _Name;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<Snooze> _Snoozes;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntervalTypeIdChanging(System.Guid value);
    partial void OnIntervalTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public IntervalType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid IntervalTypeId
		{
			get
			{
				return this._IntervalTypeId;
			}
			set
			{
				if ((this._IntervalTypeId != value))
				{
					this.OnIntervalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntervalTypeId = value;
					this.SendPropertyChanged("IntervalTypeId");
					this.OnIntervalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntervalType_Snooze", Storage="_Snoozes", ThisKey="IntervalTypeId", OtherKey="IntervalTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Snooze> Snoozes
		{
			get
			{
				if ((this.serializing 
							&& (this._Snoozes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Snoozes;
			}
			set
			{
				this._Snoozes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Snoozes(Snooze entity)
		{
			this.SendPropertyChanging();
			entity.IntervalType = this;
		}
		
		private void detach_Snoozes(Snooze entity)
		{
			this.SendPropertyChanging();
			entity.IntervalType = null;
		}
		
		private void Initialize()
		{
			this._Snoozes = new EntitySet<Snooze>(new Action<Snooze>(this.attach_Snoozes), new Action<Snooze>(this.detach_Snoozes));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.LikeUnlike")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LikeUnlike : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LikeUnlikeId;
		
		private System.Guid _SolutionId;
		
		private System.Nullable<int> _Like;
		
		private System.Nullable<bool> _Unlike;
		
		private System.Guid _UserId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Solution> _Solution;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLikeUnlikeIdChanging(System.Guid value);
    partial void OnLikeUnlikeIdChanged();
    partial void OnSolutionIdChanging(System.Guid value);
    partial void OnSolutionIdChanged();
    partial void OnLikeChanging(System.Nullable<int> value);
    partial void OnLikeChanged();
    partial void OnUnlikeChanging(System.Nullable<bool> value);
    partial void OnUnlikeChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public LikeUnlike()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeUnlikeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid LikeUnlikeId
		{
			get
			{
				return this._LikeUnlikeId;
			}
			set
			{
				if ((this._LikeUnlikeId != value))
				{
					this.OnLikeUnlikeIdChanging(value);
					this.SendPropertyChanging();
					this._LikeUnlikeId = value;
					this.SendPropertyChanged("LikeUnlikeId");
					this.OnLikeUnlikeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid SolutionId
		{
			get
			{
				return this._SolutionId;
			}
			set
			{
				if ((this._SolutionId != value))
				{
					if (this._Solution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._SolutionId = value;
					this.SendPropertyChanged("SolutionId");
					this.OnSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Like]", Storage="_Like", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Like
		{
			get
			{
				return this._Like;
			}
			set
			{
				if ((this._Like != value))
				{
					this.OnLikeChanging(value);
					this.SendPropertyChanging();
					this._Like = value;
					this.SendPropertyChanged("Like");
					this.OnLikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unlike", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> Unlike
		{
			get
			{
				return this._Unlike;
			}
			set
			{
				if ((this._Unlike != value))
				{
					this.OnUnlikeChanging(value);
					this.SendPropertyChanging();
					this._Unlike = value;
					this.SendPropertyChanged("Unlike");
					this.OnUnlikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solution_LikeUnlike", Storage="_Solution", ThisKey="SolutionId", OtherKey="SolutionId", IsForeignKey=true)]
		public Solution Solution
		{
			get
			{
				return this._Solution.Entity;
			}
			set
			{
				Solution previousValue = this._Solution.Entity;
				if (((previousValue != value) 
							|| (this._Solution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solution.Entity = null;
						previousValue.LikeUnlikes.Remove(this);
					}
					this._Solution.Entity = value;
					if ((value != null))
					{
						value.LikeUnlikes.Add(this);
						this._SolutionId = value.SolutionId;
					}
					else
					{
						this._SolutionId = default(System.Guid);
					}
					this.SendPropertyChanged("Solution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LikeUnlike", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.LikeUnlikes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.LikeUnlikes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Solution = default(EntityRef<Solution>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Location")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LocationId;
		
		private System.Guid _OrganizationId;
		
		private string _LocationName;
		
		private System.Nullable<System.Guid> _LocationInfoId;
		
		private System.Nullable<System.Guid> _ServicePlanInfoId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<RecapSettingLocation> _RecapSettingLocations;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<LocationInfo> _LocationInfo;
		
		private EntityRef<ServicePlanInfo> _ServicePlanInfo;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnLocationInfoIdChanging(System.Nullable<System.Guid> value);
    partial void OnLocationInfoIdChanged();
    partial void OnServicePlanInfoIdChanging(System.Nullable<System.Guid> value);
    partial void OnServicePlanInfoIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public Location()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationInfoId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> LocationInfoId
		{
			get
			{
				return this._LocationInfoId;
			}
			set
			{
				if ((this._LocationInfoId != value))
				{
					if (this._LocationInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationInfoIdChanging(value);
					this.SendPropertyChanging();
					this._LocationInfoId = value;
					this.SendPropertyChanged("LocationInfoId");
					this.OnLocationInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanInfoId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> ServicePlanInfoId
		{
			get
			{
				return this._ServicePlanInfoId;
			}
			set
			{
				if ((this._ServicePlanInfoId != value))
				{
					if (this._ServicePlanInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePlanInfoIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePlanInfoId = value;
					this.SendPropertyChanged("ServicePlanInfoId");
					this.OnServicePlanInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_RecapSettingLocation", Storage="_RecapSettingLocations", ThisKey="LocationId", OtherKey="LocationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<RecapSettingLocation> RecapSettingLocations
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingLocations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingLocations;
			}
			set
			{
				this._RecapSettingLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_Contacts", ThisKey="LocationId", OtherKey="LocationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Contact> Contacts
		{
			get
			{
				if ((this.serializing 
							&& (this._Contacts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Ticket", Storage="_Tickets", ThisKey="LocationId", OtherKey="LocationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				if ((this.serializing 
							&& (this._Tickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationInfo_Location", Storage="_LocationInfo", ThisKey="LocationInfoId", OtherKey="LocationInfoId", IsForeignKey=true)]
		public LocationInfo LocationInfo
		{
			get
			{
				return this._LocationInfo.Entity;
			}
			set
			{
				LocationInfo previousValue = this._LocationInfo.Entity;
				if (((previousValue != value) 
							|| (this._LocationInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocationInfo.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._LocationInfo.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._LocationInfoId = value.LocationInfoId;
					}
					else
					{
						this._LocationInfoId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("LocationInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePlanInfo_Location", Storage="_ServicePlanInfo", ThisKey="ServicePlanInfoId", OtherKey="ServicePlanInfoId", IsForeignKey=true)]
		public ServicePlanInfo ServicePlanInfo
		{
			get
			{
				return this._ServicePlanInfo.Entity;
			}
			set
			{
				ServicePlanInfo previousValue = this._ServicePlanInfo.Entity;
				if (((previousValue != value) 
							|| (this._ServicePlanInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePlanInfo.Entity = null;
						previousValue.Locations.Remove(this);
					}
					this._ServicePlanInfo.Entity = value;
					if ((value != null))
					{
						value.Locations.Add(this);
						this._ServicePlanInfoId = value.ServicePlanInfoId;
					}
					else
					{
						this._ServicePlanInfoId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ServicePlanInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecapSettingLocations(RecapSettingLocation entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_RecapSettingLocations(RecapSettingLocation entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void Initialize()
		{
			this._RecapSettingLocations = new EntitySet<RecapSettingLocation>(new Action<RecapSettingLocation>(this.attach_RecapSettingLocations), new Action<RecapSettingLocation>(this.detach_RecapSettingLocations));
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._LocationInfo = default(EntityRef<LocationInfo>);
			this._ServicePlanInfo = default(EntityRef<ServicePlanInfo>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.LocationInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LocationInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LocationInfoId;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _PostalCode;
		
		private string _Country;
		
		private string _BusinessPhone;
		
		private string _Fax;
		
		private string _MobilePhone;
		
		private string _HomePhone;
		
		private string _Email1;
		
		private string _Email2;
		
		private string _Website;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<Location> _Locations;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationInfoIdChanging(System.Guid value);
    partial void OnLocationInfoIdChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnBusinessPhoneChanging(string value);
    partial void OnBusinessPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnEmail1Changing(string value);
    partial void OnEmail1Changed();
    partial void OnEmail2Changing(string value);
    partial void OnEmail2Changed();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public LocationInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationInfoId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid LocationInfoId
		{
			get
			{
				return this._LocationInfoId;
			}
			set
			{
				if ((this._LocationInfoId != value))
				{
					this.OnLocationInfoIdChanging(value);
					this.SendPropertyChanging();
					this._LocationInfoId = value;
					this.SendPropertyChanged("LocationInfoId");
					this.OnLocationInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(75)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string BusinessPhone
		{
			get
			{
				return this._BusinessPhone;
			}
			set
			{
				if ((this._BusinessPhone != value))
				{
					this.OnBusinessPhoneChanging(value);
					this.SendPropertyChanging();
					this._BusinessPhone = value;
					this.SendPropertyChanged("BusinessPhone");
					this.OnBusinessPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email1", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Email1
		{
			get
			{
				return this._Email1;
			}
			set
			{
				if ((this._Email1 != value))
				{
					this.OnEmail1Changing(value);
					this.SendPropertyChanging();
					this._Email1 = value;
					this.SendPropertyChanged("Email1");
					this.OnEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email2", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Email2
		{
			get
			{
				return this._Email2;
			}
			set
			{
				if ((this._Email2 != value))
				{
					this.OnEmail2Changing(value);
					this.SendPropertyChanging();
					this._Email2 = value;
					this.SendPropertyChanged("Email2");
					this.OnEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationInfo_Location", Storage="_Locations", ThisKey="LocationInfoId", OtherKey="LocationInfoId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Location> Locations
		{
			get
			{
				if ((this.serializing 
							&& (this._Locations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.LocationInfo = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.LocationInfo = null;
		}
		
		private void Initialize()
		{
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Organization")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OrganizationId;
		
		private string _OrganizationName;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<UserOrganization> _UserOrganizations;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<Ticket> _Tickets;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public Organization()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_UserOrganization", Storage="_UserOrganizations", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserOrganization> UserOrganizations
		{
			get
			{
				if ((this.serializing 
							&& (this._UserOrganizations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserOrganizations;
			}
			set
			{
				this._UserOrganizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Category", Storage="_Categories", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Category> Categories
		{
			get
			{
				if ((this.serializing 
							&& (this._Categories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Contact", Storage="_Contacts", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Contact> Contacts
		{
			get
			{
				if ((this.serializing 
							&& (this._Contacts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Ticket", Storage="_Tickets", ThisKey="OrganizationId", OtherKey="OrganizationId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				if ((this.serializing 
							&& (this._Tickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserOrganizations(UserOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_UserOrganizations(UserOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void Initialize()
		{
			this._UserOrganizations = new EntitySet<UserOrganization>(new Action<UserOrganization>(this.attach_UserOrganizations), new Action<UserOrganization>(this.detach_UserOrganizations));
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Problem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Problem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProblemId;
		
		private System.Guid _TicketId;
		
		private string _ProblemShortDesc;
		
		private string _ProblemText;
		
		private System.Nullable<int> _LikeCount;
		
		private System.Nullable<int> _UnlikeCount;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Nullable<System.Guid> _UserId;
		
		private EntitySet<ProblemBlob> _ProblemBlobs;
		
		private EntityRef<User> _User;
		
		private EntityRef<Ticket> _Ticket;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProblemIdChanging(System.Guid value);
    partial void OnProblemIdChanged();
    partial void OnTicketIdChanging(System.Guid value);
    partial void OnTicketIdChanged();
    partial void OnProblemShortDescChanging(string value);
    partial void OnProblemShortDescChanged();
    partial void OnProblemTextChanging(string value);
    partial void OnProblemTextChanged();
    partial void OnLikeCountChanging(System.Nullable<int> value);
    partial void OnLikeCountChanged();
    partial void OnUnlikeCountChanging(System.Nullable<int> value);
    partial void OnUnlikeCountChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    #endregion
		
		public Problem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ProblemId
		{
			get
			{
				return this._ProblemId;
			}
			set
			{
				if ((this._ProblemId != value))
				{
					this.OnProblemIdChanging(value);
					this.SendPropertyChanging();
					this._ProblemId = value;
					this.SendPropertyChanged("ProblemId");
					this.OnProblemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemShortDesc", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProblemShortDesc
		{
			get
			{
				return this._ProblemShortDesc;
			}
			set
			{
				if ((this._ProblemShortDesc != value))
				{
					this.OnProblemShortDescChanging(value);
					this.SendPropertyChanging();
					this._ProblemShortDesc = value;
					this.SendPropertyChanged("ProblemShortDesc");
					this.OnProblemShortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ProblemText
		{
			get
			{
				return this._ProblemText;
			}
			set
			{
				if ((this._ProblemText != value))
				{
					this.OnProblemTextChanging(value);
					this.SendPropertyChanging();
					this._ProblemText = value;
					this.SendPropertyChanged("ProblemText");
					this.OnProblemTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> LikeCount
		{
			get
			{
				return this._LikeCount;
			}
			set
			{
				if ((this._LikeCount != value))
				{
					this.OnLikeCountChanging(value);
					this.SendPropertyChanging();
					this._LikeCount = value;
					this.SendPropertyChanged("LikeCount");
					this.OnLikeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> UnlikeCount
		{
			get
			{
				return this._UnlikeCount;
			}
			set
			{
				if ((this._UnlikeCount != value))
				{
					this.OnUnlikeCountChanging(value);
					this.SendPropertyChanging();
					this._UnlikeCount = value;
					this.SendPropertyChanged("UnlikeCount");
					this.OnUnlikeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problem_ProblemBlob", Storage="_ProblemBlobs", ThisKey="ProblemId", OtherKey="ProblemId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ProblemBlob> ProblemBlobs
		{
			get
			{
				if ((this.serializing 
							&& (this._ProblemBlobs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ProblemBlobs;
			}
			set
			{
				this._ProblemBlobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Problem", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Problem", Storage="_Ticket", ThisKey="TicketId", OtherKey="TicketId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.Problems.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.Problems.Add(this);
						this._TicketId = value.TicketId;
					}
					else
					{
						this._TicketId = default(System.Guid);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProblemBlobs(ProblemBlob entity)
		{
			this.SendPropertyChanging();
			entity.Problem = this;
		}
		
		private void detach_ProblemBlobs(ProblemBlob entity)
		{
			this.SendPropertyChanging();
			entity.Problem = null;
		}
		
		private void Initialize()
		{
			this._ProblemBlobs = new EntitySet<ProblemBlob>(new Action<ProblemBlob>(this.attach_ProblemBlobs), new Action<ProblemBlob>(this.detach_ProblemBlobs));
			this._User = default(EntityRef<User>);
			this._Ticket = default(EntityRef<Ticket>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.ProblemBlob")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProblemBlob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProblemBlobId;
		
		private System.Guid _ProblemId;
		
		private System.Guid _BlobId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<BlobEntry> _BlobEntry;
		
		private EntityRef<Problem> _Problem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProblemBlobIdChanging(System.Guid value);
    partial void OnProblemBlobIdChanged();
    partial void OnProblemIdChanging(System.Guid value);
    partial void OnProblemIdChanged();
    partial void OnBlobIdChanging(System.Guid value);
    partial void OnBlobIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public ProblemBlob()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemBlobId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ProblemBlobId
		{
			get
			{
				return this._ProblemBlobId;
			}
			set
			{
				if ((this._ProblemBlobId != value))
				{
					this.OnProblemBlobIdChanging(value);
					this.SendPropertyChanging();
					this._ProblemBlobId = value;
					this.SendPropertyChanged("ProblemBlobId");
					this.OnProblemBlobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ProblemId
		{
			get
			{
				return this._ProblemId;
			}
			set
			{
				if ((this._ProblemId != value))
				{
					if (this._Problem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProblemIdChanging(value);
					this.SendPropertyChanging();
					this._ProblemId = value;
					this.SendPropertyChanged("ProblemId");
					this.OnProblemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid BlobId
		{
			get
			{
				return this._BlobId;
			}
			set
			{
				if ((this._BlobId != value))
				{
					if (this._BlobEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlobIdChanging(value);
					this.SendPropertyChanging();
					this._BlobId = value;
					this.SendPropertyChanged("BlobId");
					this.OnBlobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlobEntry_ProblemBlob", Storage="_BlobEntry", ThisKey="BlobId", OtherKey="BlobId", IsForeignKey=true)]
		public BlobEntry BlobEntry
		{
			get
			{
				return this._BlobEntry.Entity;
			}
			set
			{
				BlobEntry previousValue = this._BlobEntry.Entity;
				if (((previousValue != value) 
							|| (this._BlobEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlobEntry.Entity = null;
						previousValue.ProblemBlobs.Remove(this);
					}
					this._BlobEntry.Entity = value;
					if ((value != null))
					{
						value.ProblemBlobs.Add(this);
						this._BlobId = value.BlobId;
					}
					else
					{
						this._BlobId = default(System.Guid);
					}
					this.SendPropertyChanged("BlobEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problem_ProblemBlob", Storage="_Problem", ThisKey="ProblemId", OtherKey="ProblemId", IsForeignKey=true)]
		public Problem Problem
		{
			get
			{
				return this._Problem.Entity;
			}
			set
			{
				Problem previousValue = this._Problem.Entity;
				if (((previousValue != value) 
							|| (this._Problem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Problem.Entity = null;
						previousValue.ProblemBlobs.Remove(this);
					}
					this._Problem.Entity = value;
					if ((value != null))
					{
						value.ProblemBlobs.Add(this);
						this._ProblemId = value.ProblemId;
					}
					else
					{
						this._ProblemId = default(System.Guid);
					}
					this.SendPropertyChanged("Problem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BlobEntry = default(EntityRef<BlobEntry>);
			this._Problem = default(EntityRef<Problem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RecapSetting")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecapSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RecapSettingId;
		
		private string _Name;
		
		private string _BroadcastTime;
		
		private string _StartTime;
		
		private string _EndTime;
		
		private string _RecapMail;
		
		private string _TimeZone;
		
		private bool _Active;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<RecapSettingCategory> _RecapSettingCategories;
		
		private EntitySet<RecapSettingDay> _RecapSettingDays;
		
		private EntitySet<RecapSettingLocation> _RecapSettingLocations;
		
		private EntitySet<RecapSettingUser> _RecapSettingUsers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecapSettingIdChanging(System.Guid value);
    partial void OnRecapSettingIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBroadcastTimeChanging(string value);
    partial void OnBroadcastTimeChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnRecapMailChanging(string value);
    partial void OnRecapMailChanged();
    partial void OnTimeZoneChanging(string value);
    partial void OnTimeZoneChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RecapSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RecapSettingId
		{
			get
			{
				return this._RecapSettingId;
			}
			set
			{
				if ((this._RecapSettingId != value))
				{
					this.OnRecapSettingIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingId = value;
					this.SendPropertyChanged("RecapSettingId");
					this.OnRecapSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BroadcastTime", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string BroadcastTime
		{
			get
			{
				return this._BroadcastTime;
			}
			set
			{
				if ((this._BroadcastTime != value))
				{
					this.OnBroadcastTimeChanging(value);
					this.SendPropertyChanging();
					this._BroadcastTime = value;
					this.SendPropertyChanged("BroadcastTime");
					this.OnBroadcastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapMail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string RecapMail
		{
			get
			{
				return this._RecapMail;
			}
			set
			{
				if ((this._RecapMail != value))
				{
					this.OnRecapMailChanging(value);
					this.SendPropertyChanging();
					this._RecapMail = value;
					this.SendPropertyChanged("RecapMail");
					this.OnRecapMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingCategory", Storage="_RecapSettingCategories", ThisKey="RecapSettingId", OtherKey="RecapSettingId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<RecapSettingCategory> RecapSettingCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingCategories;
			}
			set
			{
				this._RecapSettingCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingDay", Storage="_RecapSettingDays", ThisKey="RecapSettingId", OtherKey="RecapSettingId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<RecapSettingDay> RecapSettingDays
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingDays.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingDays;
			}
			set
			{
				this._RecapSettingDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingLocation", Storage="_RecapSettingLocations", ThisKey="RecapSettingId", OtherKey="RecapSettingId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<RecapSettingLocation> RecapSettingLocations
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingLocations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingLocations;
			}
			set
			{
				this._RecapSettingLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingUser", Storage="_RecapSettingUsers", ThisKey="RecapSettingId", OtherKey="RecapSettingId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<RecapSettingUser> RecapSettingUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingUsers;
			}
			set
			{
				this._RecapSettingUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecapSettingCategories(RecapSettingCategory entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = this;
		}
		
		private void detach_RecapSettingCategories(RecapSettingCategory entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = null;
		}
		
		private void attach_RecapSettingDays(RecapSettingDay entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = this;
		}
		
		private void detach_RecapSettingDays(RecapSettingDay entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = null;
		}
		
		private void attach_RecapSettingLocations(RecapSettingLocation entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = this;
		}
		
		private void detach_RecapSettingLocations(RecapSettingLocation entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = null;
		}
		
		private void attach_RecapSettingUsers(RecapSettingUser entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = this;
		}
		
		private void detach_RecapSettingUsers(RecapSettingUser entity)
		{
			this.SendPropertyChanging();
			entity.RecapSetting = null;
		}
		
		private void Initialize()
		{
			this._RecapSettingCategories = new EntitySet<RecapSettingCategory>(new Action<RecapSettingCategory>(this.attach_RecapSettingCategories), new Action<RecapSettingCategory>(this.detach_RecapSettingCategories));
			this._RecapSettingDays = new EntitySet<RecapSettingDay>(new Action<RecapSettingDay>(this.attach_RecapSettingDays), new Action<RecapSettingDay>(this.detach_RecapSettingDays));
			this._RecapSettingLocations = new EntitySet<RecapSettingLocation>(new Action<RecapSettingLocation>(this.attach_RecapSettingLocations), new Action<RecapSettingLocation>(this.detach_RecapSettingLocations));
			this._RecapSettingUsers = new EntitySet<RecapSettingUser>(new Action<RecapSettingUser>(this.attach_RecapSettingUsers), new Action<RecapSettingUser>(this.detach_RecapSettingUsers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RecapSettingCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecapSettingCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RecapSettingCategoryId;
		
		private System.Nullable<System.Guid> _CategoryId;
		
		private System.Nullable<System.Guid> _RecapSettingId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<RecapSetting> _RecapSetting;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecapSettingCategoryIdChanging(System.Guid value);
    partial void OnRecapSettingCategoryIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<System.Guid> value);
    partial void OnCategoryIdChanged();
    partial void OnRecapSettingIdChanging(System.Nullable<System.Guid> value);
    partial void OnRecapSettingIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RecapSettingCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingCategoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RecapSettingCategoryId
		{
			get
			{
				return this._RecapSettingCategoryId;
			}
			set
			{
				if ((this._RecapSettingCategoryId != value))
				{
					this.OnRecapSettingCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingCategoryId = value;
					this.SendPropertyChanged("RecapSettingCategoryId");
					this.OnRecapSettingCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> RecapSettingId
		{
			get
			{
				return this._RecapSettingId;
			}
			set
			{
				if ((this._RecapSettingId != value))
				{
					if (this._RecapSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecapSettingIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingId = value;
					this.SendPropertyChanged("RecapSettingId");
					this.OnRecapSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingCategory", Storage="_RecapSetting", ThisKey="RecapSettingId", OtherKey="RecapSettingId", IsForeignKey=true)]
		public RecapSetting RecapSetting
		{
			get
			{
				return this._RecapSetting.Entity;
			}
			set
			{
				RecapSetting previousValue = this._RecapSetting.Entity;
				if (((previousValue != value) 
							|| (this._RecapSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecapSetting.Entity = null;
						previousValue.RecapSettingCategories.Remove(this);
					}
					this._RecapSetting.Entity = value;
					if ((value != null))
					{
						value.RecapSettingCategories.Add(this);
						this._RecapSettingId = value.RecapSettingId;
					}
					else
					{
						this._RecapSettingId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RecapSetting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_RecapSettingCategory", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.RecapSettingCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.RecapSettingCategories.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RecapSetting = default(EntityRef<RecapSetting>);
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RecapSettingDay")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecapSettingDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RecapSettingDayId;
		
		private System.Guid _RecapSettingId;
		
		private string _DayName;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<RecapSetting> _RecapSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecapSettingDayIdChanging(System.Guid value);
    partial void OnRecapSettingDayIdChanged();
    partial void OnRecapSettingIdChanging(System.Guid value);
    partial void OnRecapSettingIdChanged();
    partial void OnDayNameChanging(string value);
    partial void OnDayNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RecapSettingDay()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingDayId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RecapSettingDayId
		{
			get
			{
				return this._RecapSettingDayId;
			}
			set
			{
				if ((this._RecapSettingDayId != value))
				{
					this.OnRecapSettingDayIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingDayId = value;
					this.SendPropertyChanged("RecapSettingDayId");
					this.OnRecapSettingDayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid RecapSettingId
		{
			get
			{
				return this._RecapSettingId;
			}
			set
			{
				if ((this._RecapSettingId != value))
				{
					if (this._RecapSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecapSettingIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingId = value;
					this.SendPropertyChanged("RecapSettingId");
					this.OnRecapSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayName", DbType="Char(3) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DayName
		{
			get
			{
				return this._DayName;
			}
			set
			{
				if ((this._DayName != value))
				{
					this.OnDayNameChanging(value);
					this.SendPropertyChanging();
					this._DayName = value;
					this.SendPropertyChanged("DayName");
					this.OnDayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingDay", Storage="_RecapSetting", ThisKey="RecapSettingId", OtherKey="RecapSettingId", IsForeignKey=true)]
		public RecapSetting RecapSetting
		{
			get
			{
				return this._RecapSetting.Entity;
			}
			set
			{
				RecapSetting previousValue = this._RecapSetting.Entity;
				if (((previousValue != value) 
							|| (this._RecapSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecapSetting.Entity = null;
						previousValue.RecapSettingDays.Remove(this);
					}
					this._RecapSetting.Entity = value;
					if ((value != null))
					{
						value.RecapSettingDays.Add(this);
						this._RecapSettingId = value.RecapSettingId;
					}
					else
					{
						this._RecapSettingId = default(System.Guid);
					}
					this.SendPropertyChanged("RecapSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RecapSetting = default(EntityRef<RecapSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RecapSettingLocation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecapSettingLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RecapSettingLocationId;
		
		private System.Guid _RecapSettingId;
		
		private System.Guid _LocationId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<RecapSetting> _RecapSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecapSettingLocationIdChanging(System.Guid value);
    partial void OnRecapSettingLocationIdChanged();
    partial void OnRecapSettingIdChanging(System.Guid value);
    partial void OnRecapSettingIdChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RecapSettingLocation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingLocationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RecapSettingLocationId
		{
			get
			{
				return this._RecapSettingLocationId;
			}
			set
			{
				if ((this._RecapSettingLocationId != value))
				{
					this.OnRecapSettingLocationIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingLocationId = value;
					this.SendPropertyChanged("RecapSettingLocationId");
					this.OnRecapSettingLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid RecapSettingId
		{
			get
			{
				return this._RecapSettingId;
			}
			set
			{
				if ((this._RecapSettingId != value))
				{
					if (this._RecapSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecapSettingIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingId = value;
					this.SendPropertyChanged("RecapSettingId");
					this.OnRecapSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_RecapSettingLocation", Storage="_Location", ThisKey="LocationId", OtherKey="LocationId", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.RecapSettingLocations.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.RecapSettingLocations.Add(this);
						this._LocationId = value.LocationId;
					}
					else
					{
						this._LocationId = default(System.Guid);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingLocation", Storage="_RecapSetting", ThisKey="RecapSettingId", OtherKey="RecapSettingId", IsForeignKey=true)]
		public RecapSetting RecapSetting
		{
			get
			{
				return this._RecapSetting.Entity;
			}
			set
			{
				RecapSetting previousValue = this._RecapSetting.Entity;
				if (((previousValue != value) 
							|| (this._RecapSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecapSetting.Entity = null;
						previousValue.RecapSettingLocations.Remove(this);
					}
					this._RecapSetting.Entity = value;
					if ((value != null))
					{
						value.RecapSettingLocations.Add(this);
						this._RecapSettingId = value.RecapSettingId;
					}
					else
					{
						this._RecapSettingId = default(System.Guid);
					}
					this.SendPropertyChanged("RecapSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Location = default(EntityRef<Location>);
			this._RecapSetting = default(EntityRef<RecapSetting>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RecapSettingUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecapSettingUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RecapSettingUserId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<System.Guid> _RecapSettingId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<RecapSetting> _RecapSetting;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecapSettingUserIdChanging(System.Guid value);
    partial void OnRecapSettingUserIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnRecapSettingIdChanging(System.Nullable<System.Guid> value);
    partial void OnRecapSettingIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RecapSettingUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingUserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RecapSettingUserId
		{
			get
			{
				return this._RecapSettingUserId;
			}
			set
			{
				if ((this._RecapSettingUserId != value))
				{
					this.OnRecapSettingUserIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingUserId = value;
					this.SendPropertyChanged("RecapSettingUserId");
					this.OnRecapSettingUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecapSettingId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> RecapSettingId
		{
			get
			{
				return this._RecapSettingId;
			}
			set
			{
				if ((this._RecapSettingId != value))
				{
					if (this._RecapSetting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecapSettingIdChanging(value);
					this.SendPropertyChanging();
					this._RecapSettingId = value;
					this.SendPropertyChanged("RecapSettingId");
					this.OnRecapSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecapSetting_RecapSettingUser", Storage="_RecapSetting", ThisKey="RecapSettingId", OtherKey="RecapSettingId", IsForeignKey=true)]
		public RecapSetting RecapSetting
		{
			get
			{
				return this._RecapSetting.Entity;
			}
			set
			{
				RecapSetting previousValue = this._RecapSetting.Entity;
				if (((previousValue != value) 
							|| (this._RecapSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecapSetting.Entity = null;
						previousValue.RecapSettingUsers.Remove(this);
					}
					this._RecapSetting.Entity = value;
					if ((value != null))
					{
						value.RecapSettingUsers.Add(this);
						this._RecapSettingId = value.RecapSettingId;
					}
					else
					{
						this._RecapSettingId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RecapSetting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecapSettingUser", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RecapSettingUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RecapSettingUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RecapSetting = default(EntityRef<RecapSetting>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Role")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RoleId;
		
		private string _Name;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<FeatureRole> _FeatureRoles;
		
		private EntitySet<RolePermission> _RolePermissions;
		
		private EntitySet<RolePermission1> _RolePermission1s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public Role()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="RoleId", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_FeatureRole", Storage="_FeatureRoles", ThisKey="RoleId", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<FeatureRole> FeatureRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._FeatureRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FeatureRoles;
			}
			set
			{
				this._FeatureRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_RolePermissions", ThisKey="RoleId", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._RolePermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission1", Storage="_RolePermission1s", ThisKey="RoleId", OtherKey="RoleId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<RolePermission1> RolePermission1s
		{
			get
			{
				if ((this.serializing 
							&& (this._RolePermission1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RolePermission1s;
			}
			set
			{
				this._RolePermission1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_FeatureRoles(FeatureRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_FeatureRoles(FeatureRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_RolePermission1s(RolePermission1 entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RolePermission1s(RolePermission1 entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void Initialize()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._FeatureRoles = new EntitySet<FeatureRole>(new Action<FeatureRole>(this.attach_FeatureRoles), new Action<FeatureRole>(this.detach_FeatureRoles));
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			this._RolePermission1s = new EntitySet<RolePermission1>(new Action<RolePermission1>(this.attach_RolePermission1s), new Action<RolePermission1>(this.detach_RolePermission1s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.ServicePlanInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ServicePlanInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServicePlanInfoId;
		
		private System.Guid _ServicePlanTypeId;
		
		private bool _Active;
		
		private string _SubscriptionStart;
		
		private string _SubscriptionEnd;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<Location> _Locations;
		
		private EntityRef<ServicePlanType> _ServicePlanType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServicePlanInfoIdChanging(System.Guid value);
    partial void OnServicePlanInfoIdChanged();
    partial void OnServicePlanTypeIdChanging(System.Guid value);
    partial void OnServicePlanTypeIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSubscriptionStartChanging(string value);
    partial void OnSubscriptionStartChanged();
    partial void OnSubscriptionEndChanging(string value);
    partial void OnSubscriptionEndChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public ServicePlanInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanInfoId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ServicePlanInfoId
		{
			get
			{
				return this._ServicePlanInfoId;
			}
			set
			{
				if ((this._ServicePlanInfoId != value))
				{
					this.OnServicePlanInfoIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePlanInfoId = value;
					this.SendPropertyChanged("ServicePlanInfoId");
					this.OnServicePlanInfoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanTypeId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ServicePlanTypeId
		{
			get
			{
				return this._ServicePlanTypeId;
			}
			set
			{
				if ((this._ServicePlanTypeId != value))
				{
					if (this._ServicePlanType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePlanTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePlanTypeId = value;
					this.SendPropertyChanged("ServicePlanTypeId");
					this.OnServicePlanTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionStart", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SubscriptionStart
		{
			get
			{
				return this._SubscriptionStart;
			}
			set
			{
				if ((this._SubscriptionStart != value))
				{
					this.OnSubscriptionStartChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionStart = value;
					this.SendPropertyChanged("SubscriptionStart");
					this.OnSubscriptionStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionEnd", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string SubscriptionEnd
		{
			get
			{
				return this._SubscriptionEnd;
			}
			set
			{
				if ((this._SubscriptionEnd != value))
				{
					this.OnSubscriptionEndChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionEnd = value;
					this.SendPropertyChanged("SubscriptionEnd");
					this.OnSubscriptionEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePlanInfo_Location", Storage="_Locations", ThisKey="ServicePlanInfoId", OtherKey="ServicePlanInfoId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Location> Locations
		{
			get
			{
				if ((this.serializing 
							&& (this._Locations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Locations;
			}
			set
			{
				this._Locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePlanType_ServicePlanInfo", Storage="_ServicePlanType", ThisKey="ServicePlanTypeId", OtherKey="ServicePlanTypeId", IsForeignKey=true)]
		public ServicePlanType ServicePlanType
		{
			get
			{
				return this._ServicePlanType.Entity;
			}
			set
			{
				ServicePlanType previousValue = this._ServicePlanType.Entity;
				if (((previousValue != value) 
							|| (this._ServicePlanType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePlanType.Entity = null;
						previousValue.ServicePlanInfos.Remove(this);
					}
					this._ServicePlanType.Entity = value;
					if ((value != null))
					{
						value.ServicePlanInfos.Add(this);
						this._ServicePlanTypeId = value.ServicePlanTypeId;
					}
					else
					{
						this._ServicePlanTypeId = default(System.Guid);
					}
					this.SendPropertyChanged("ServicePlanType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.ServicePlanInfo = this;
		}
		
		private void detach_Locations(Location entity)
		{
			this.SendPropertyChanging();
			entity.ServicePlanInfo = null;
		}
		
		private void Initialize()
		{
			this._Locations = new EntitySet<Location>(new Action<Location>(this.attach_Locations), new Action<Location>(this.detach_Locations));
			this._ServicePlanType = default(EntityRef<ServicePlanType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.ServicePlanType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ServicePlanType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServicePlanTypeId;
		
		private string _Name;
		
		private System.Nullable<char> _Initial;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<ServicePlanInfo> _ServicePlanInfos;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServicePlanTypeIdChanging(System.Guid value);
    partial void OnServicePlanTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInitialChanging(System.Nullable<char> value);
    partial void OnInitialChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public ServicePlanType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePlanTypeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ServicePlanTypeId
		{
			get
			{
				return this._ServicePlanTypeId;
			}
			set
			{
				if ((this._ServicePlanTypeId != value))
				{
					this.OnServicePlanTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePlanTypeId = value;
					this.SendPropertyChanged("ServicePlanTypeId");
					this.OnServicePlanTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Initial", DbType="NChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<char> Initial
		{
			get
			{
				return this._Initial;
			}
			set
			{
				if ((this._Initial != value))
				{
					this.OnInitialChanging(value);
					this.SendPropertyChanging();
					this._Initial = value;
					this.SendPropertyChanged("Initial");
					this.OnInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePlanType_ServicePlanInfo", Storage="_ServicePlanInfos", ThisKey="ServicePlanTypeId", OtherKey="ServicePlanTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ServicePlanInfo> ServicePlanInfos
		{
			get
			{
				if ((this.serializing 
							&& (this._ServicePlanInfos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ServicePlanInfos;
			}
			set
			{
				this._ServicePlanInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServicePlanInfos(ServicePlanInfo entity)
		{
			this.SendPropertyChanging();
			entity.ServicePlanType = this;
		}
		
		private void detach_ServicePlanInfos(ServicePlanInfo entity)
		{
			this.SendPropertyChanging();
			entity.ServicePlanType = null;
		}
		
		private void Initialize()
		{
			this._ServicePlanInfos = new EntitySet<ServicePlanInfo>(new Action<ServicePlanInfo>(this.attach_ServicePlanInfos), new Action<ServicePlanInfo>(this.detach_ServicePlanInfos));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Snooze")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Snooze : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SnoozeId;
		
		private System.Guid _ReasonId;
		
		private bool _IsCompleted;
		
		private string _CompletedDate;
		
		private System.Nullable<bool> _IsDateInterval;
		
		private System.Nullable<bool> _IsQuickShare;
		
		private string _StartDate;
		
		private string _EndDate;
		
		private System.Nullable<long> _QuickShareHours;
		
		private System.Nullable<long> _QuickShareMinutes;
		
		private System.Nullable<long> _SnoozeInterval;
		
		private System.Nullable<System.Guid> _IntervalTypeId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Guid _UserId;
		
		private EntitySet<SnoozedTicket> _SnoozedTickets;
		
		private EntityRef<IntervalType> _IntervalType;
		
		private EntityRef<SnoozeReason> _SnoozeReason;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnoozeIdChanging(System.Guid value);
    partial void OnSnoozeIdChanged();
    partial void OnReasonIdChanging(System.Guid value);
    partial void OnReasonIdChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    partial void OnCompletedDateChanging(string value);
    partial void OnCompletedDateChanged();
    partial void OnIsDateIntervalChanging(System.Nullable<bool> value);
    partial void OnIsDateIntervalChanged();
    partial void OnIsQuickShareChanging(System.Nullable<bool> value);
    partial void OnIsQuickShareChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(string value);
    partial void OnEndDateChanged();
    partial void OnQuickShareHoursChanging(System.Nullable<long> value);
    partial void OnQuickShareHoursChanged();
    partial void OnQuickShareMinutesChanging(System.Nullable<long> value);
    partial void OnQuickShareMinutesChanged();
    partial void OnSnoozeIntervalChanging(System.Nullable<long> value);
    partial void OnSnoozeIntervalChanged();
    partial void OnIntervalTypeIdChanging(System.Nullable<System.Guid> value);
    partial void OnIntervalTypeIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    #endregion
		
		public Snooze()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SnoozeId
		{
			get
			{
				return this._SnoozeId;
			}
			set
			{
				if ((this._SnoozeId != value))
				{
					this.OnSnoozeIdChanging(value);
					this.SendPropertyChanging();
					this._SnoozeId = value;
					this.SendPropertyChanged("SnoozeId");
					this.OnSnoozeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid ReasonId
		{
			get
			{
				return this._ReasonId;
			}
			set
			{
				if ((this._ReasonId != value))
				{
					if (this._SnoozeReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonIdChanging(value);
					this.SendPropertyChanging();
					this._ReasonId = value;
					this.SendPropertyChanged("ReasonId");
					this.OnReasonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDateInterval", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsDateInterval
		{
			get
			{
				return this._IsDateInterval;
			}
			set
			{
				if ((this._IsDateInterval != value))
				{
					this.OnIsDateIntervalChanging(value);
					this.SendPropertyChanging();
					this._IsDateInterval = value;
					this.SendPropertyChanged("IsDateInterval");
					this.OnIsDateIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQuickShare", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsQuickShare
		{
			get
			{
				return this._IsQuickShare;
			}
			set
			{
				if ((this._IsQuickShare != value))
				{
					this.OnIsQuickShareChanging(value);
					this.SendPropertyChanging();
					this._IsQuickShare = value;
					this.SendPropertyChanged("IsQuickShare");
					this.OnIsQuickShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickShareHours", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<long> QuickShareHours
		{
			get
			{
				return this._QuickShareHours;
			}
			set
			{
				if ((this._QuickShareHours != value))
				{
					this.OnQuickShareHoursChanging(value);
					this.SendPropertyChanging();
					this._QuickShareHours = value;
					this.SendPropertyChanged("QuickShareHours");
					this.OnQuickShareHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickShareMinutes", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<long> QuickShareMinutes
		{
			get
			{
				return this._QuickShareMinutes;
			}
			set
			{
				if ((this._QuickShareMinutes != value))
				{
					this.OnQuickShareMinutesChanging(value);
					this.SendPropertyChanging();
					this._QuickShareMinutes = value;
					this.SendPropertyChanged("QuickShareMinutes");
					this.OnQuickShareMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozeInterval", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<long> SnoozeInterval
		{
			get
			{
				return this._SnoozeInterval;
			}
			set
			{
				if ((this._SnoozeInterval != value))
				{
					this.OnSnoozeIntervalChanging(value);
					this.SendPropertyChanging();
					this._SnoozeInterval = value;
					this.SendPropertyChanged("SnoozeInterval");
					this.OnSnoozeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalTypeId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.Guid> IntervalTypeId
		{
			get
			{
				return this._IntervalTypeId;
			}
			set
			{
				if ((this._IntervalTypeId != value))
				{
					if (this._IntervalType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntervalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IntervalTypeId = value;
					this.SendPropertyChanged("IntervalTypeId");
					this.OnIntervalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Snooze_SnoozedTicket", Storage="_SnoozedTickets", ThisKey="SnoozeId", OtherKey="SnoozeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<SnoozedTicket> SnoozedTickets
		{
			get
			{
				if ((this.serializing 
							&& (this._SnoozedTickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SnoozedTickets;
			}
			set
			{
				this._SnoozedTickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntervalType_Snooze", Storage="_IntervalType", ThisKey="IntervalTypeId", OtherKey="IntervalTypeId", IsForeignKey=true)]
		public IntervalType IntervalType
		{
			get
			{
				return this._IntervalType.Entity;
			}
			set
			{
				IntervalType previousValue = this._IntervalType.Entity;
				if (((previousValue != value) 
							|| (this._IntervalType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntervalType.Entity = null;
						previousValue.Snoozes.Remove(this);
					}
					this._IntervalType.Entity = value;
					if ((value != null))
					{
						value.Snoozes.Add(this);
						this._IntervalTypeId = value.IntervalTypeId;
					}
					else
					{
						this._IntervalTypeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("IntervalType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SnoozeReason_Snooze", Storage="_SnoozeReason", ThisKey="ReasonId", OtherKey="ReasonId", IsForeignKey=true)]
		public SnoozeReason SnoozeReason
		{
			get
			{
				return this._SnoozeReason.Entity;
			}
			set
			{
				SnoozeReason previousValue = this._SnoozeReason.Entity;
				if (((previousValue != value) 
							|| (this._SnoozeReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SnoozeReason.Entity = null;
						previousValue.Snoozes.Remove(this);
					}
					this._SnoozeReason.Entity = value;
					if ((value != null))
					{
						value.Snoozes.Add(this);
						this._ReasonId = value.ReasonId;
					}
					else
					{
						this._ReasonId = default(System.Guid);
					}
					this.SendPropertyChanged("SnoozeReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Snooze", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Snoozes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Snoozes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SnoozedTickets(SnoozedTicket entity)
		{
			this.SendPropertyChanging();
			entity.Snooze = this;
		}
		
		private void detach_SnoozedTickets(SnoozedTicket entity)
		{
			this.SendPropertyChanging();
			entity.Snooze = null;
		}
		
		private void Initialize()
		{
			this._SnoozedTickets = new EntitySet<SnoozedTicket>(new Action<SnoozedTicket>(this.attach_SnoozedTickets), new Action<SnoozedTicket>(this.detach_SnoozedTickets));
			this._IntervalType = default(EntityRef<IntervalType>);
			this._SnoozeReason = default(EntityRef<SnoozeReason>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.SnoozedTicket")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SnoozedTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SnoozedTicketId;
		
		private System.Nullable<System.Guid> _SnoozeId;
		
		private System.Nullable<System.Guid> _TicketId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Snooze> _Snooze;
		
		private EntityRef<Ticket> _Ticket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnoozedTicketIdChanging(System.Guid value);
    partial void OnSnoozedTicketIdChanged();
    partial void OnSnoozeIdChanging(System.Nullable<System.Guid> value);
    partial void OnSnoozeIdChanged();
    partial void OnTicketIdChanging(System.Nullable<System.Guid> value);
    partial void OnTicketIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public SnoozedTicket()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozedTicketId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SnoozedTicketId
		{
			get
			{
				return this._SnoozedTicketId;
			}
			set
			{
				if ((this._SnoozedTicketId != value))
				{
					this.OnSnoozedTicketIdChanging(value);
					this.SendPropertyChanging();
					this._SnoozedTicketId = value;
					this.SendPropertyChanged("SnoozedTicketId");
					this.OnSnoozedTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozeId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> SnoozeId
		{
			get
			{
				return this._SnoozeId;
			}
			set
			{
				if ((this._SnoozeId != value))
				{
					if (this._Snooze.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSnoozeIdChanging(value);
					this.SendPropertyChanging();
					this._SnoozeId = value;
					this.SendPropertyChanged("SnoozeId");
					this.OnSnoozeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Snooze_SnoozedTicket", Storage="_Snooze", ThisKey="SnoozeId", OtherKey="SnoozeId", IsForeignKey=true)]
		public Snooze Snooze
		{
			get
			{
				return this._Snooze.Entity;
			}
			set
			{
				Snooze previousValue = this._Snooze.Entity;
				if (((previousValue != value) 
							|| (this._Snooze.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Snooze.Entity = null;
						previousValue.SnoozedTickets.Remove(this);
					}
					this._Snooze.Entity = value;
					if ((value != null))
					{
						value.SnoozedTickets.Add(this);
						this._SnoozeId = value.SnoozeId;
					}
					else
					{
						this._SnoozeId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Snooze");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_SnoozedTicket", Storage="_Ticket", ThisKey="TicketId", OtherKey="TicketId", IsForeignKey=true)]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.SnoozedTickets.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.SnoozedTickets.Add(this);
						this._TicketId = value.TicketId;
					}
					else
					{
						this._TicketId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Snooze = default(EntityRef<Snooze>);
			this._Ticket = default(EntityRef<Ticket>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.SnoozeReason")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SnoozeReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ReasonId;
		
		private string _Name;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<Snooze> _Snoozes;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonIdChanging(System.Guid value);
    partial void OnReasonIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public SnoozeReason()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ReasonId
		{
			get
			{
				return this._ReasonId;
			}
			set
			{
				if ((this._ReasonId != value))
				{
					this.OnReasonIdChanging(value);
					this.SendPropertyChanging();
					this._ReasonId = value;
					this.SendPropertyChanged("ReasonId");
					this.OnReasonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SnoozeReason_Snooze", Storage="_Snoozes", ThisKey="ReasonId", OtherKey="ReasonId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Snooze> Snoozes
		{
			get
			{
				if ((this.serializing 
							&& (this._Snoozes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Snoozes;
			}
			set
			{
				this._Snoozes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Snoozes(Snooze entity)
		{
			this.SendPropertyChanging();
			entity.SnoozeReason = this;
		}
		
		private void detach_Snoozes(Snooze entity)
		{
			this.SendPropertyChanging();
			entity.SnoozeReason = null;
		}
		
		private void Initialize()
		{
			this._Snoozes = new EntitySet<Snooze>(new Action<Snooze>(this.attach_Snoozes), new Action<Snooze>(this.detach_Snoozes));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Solution")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Solution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SolutionId;
		
		private System.Guid _TicketId;
		
		private string _SolutionShortDesc;
		
		private string _SolutionText;
		
		private System.Nullable<int> _LikeCount;
		
		private System.Nullable<int> _UnlikeCount;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Nullable<System.Guid> _UserId;
		
		private EntitySet<LikeUnlike> _LikeUnlikes;
		
		private EntitySet<SolutionBlob> _SolutionBlobs;
		
		private EntityRef<User> _User;
		
		private EntityRef<Ticket> _Ticket;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolutionIdChanging(System.Guid value);
    partial void OnSolutionIdChanged();
    partial void OnTicketIdChanging(System.Guid value);
    partial void OnTicketIdChanged();
    partial void OnSolutionShortDescChanging(string value);
    partial void OnSolutionShortDescChanged();
    partial void OnSolutionTextChanging(string value);
    partial void OnSolutionTextChanged();
    partial void OnLikeCountChanging(System.Nullable<int> value);
    partial void OnLikeCountChanged();
    partial void OnUnlikeCountChanging(System.Nullable<int> value);
    partial void OnUnlikeCountChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    #endregion
		
		public Solution()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SolutionId
		{
			get
			{
				return this._SolutionId;
			}
			set
			{
				if ((this._SolutionId != value))
				{
					this.OnSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._SolutionId = value;
					this.SendPropertyChanged("SolutionId");
					this.OnSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionShortDesc", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SolutionShortDesc
		{
			get
			{
				return this._SolutionShortDesc;
			}
			set
			{
				if ((this._SolutionShortDesc != value))
				{
					this.OnSolutionShortDescChanging(value);
					this.SendPropertyChanging();
					this._SolutionShortDesc = value;
					this.SendPropertyChanged("SolutionShortDesc");
					this.OnSolutionShortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SolutionText
		{
			get
			{
				return this._SolutionText;
			}
			set
			{
				if ((this._SolutionText != value))
				{
					this.OnSolutionTextChanging(value);
					this.SendPropertyChanging();
					this._SolutionText = value;
					this.SendPropertyChanged("SolutionText");
					this.OnSolutionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> LikeCount
		{
			get
			{
				return this._LikeCount;
			}
			set
			{
				if ((this._LikeCount != value))
				{
					this.OnLikeCountChanging(value);
					this.SendPropertyChanging();
					this._LikeCount = value;
					this.SendPropertyChanged("LikeCount");
					this.OnLikeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> UnlikeCount
		{
			get
			{
				return this._UnlikeCount;
			}
			set
			{
				if ((this._UnlikeCount != value))
				{
					this.OnUnlikeCountChanging(value);
					this.SendPropertyChanging();
					this._UnlikeCount = value;
					this.SendPropertyChanged("UnlikeCount");
					this.OnUnlikeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solution_LikeUnlike", Storage="_LikeUnlikes", ThisKey="SolutionId", OtherKey="SolutionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<LikeUnlike> LikeUnlikes
		{
			get
			{
				if ((this.serializing 
							&& (this._LikeUnlikes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LikeUnlikes;
			}
			set
			{
				this._LikeUnlikes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solution_SolutionBlob", Storage="_SolutionBlobs", ThisKey="SolutionId", OtherKey="SolutionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<SolutionBlob> SolutionBlobs
		{
			get
			{
				if ((this.serializing 
							&& (this._SolutionBlobs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SolutionBlobs;
			}
			set
			{
				this._SolutionBlobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Solution", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Solutions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Solutions.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Solution", Storage="_Ticket", ThisKey="TicketId", OtherKey="TicketId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.Solutions.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.Solutions.Add(this);
						this._TicketId = value.TicketId;
					}
					else
					{
						this._TicketId = default(System.Guid);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LikeUnlikes(LikeUnlike entity)
		{
			this.SendPropertyChanging();
			entity.Solution = this;
		}
		
		private void detach_LikeUnlikes(LikeUnlike entity)
		{
			this.SendPropertyChanging();
			entity.Solution = null;
		}
		
		private void attach_SolutionBlobs(SolutionBlob entity)
		{
			this.SendPropertyChanging();
			entity.Solution = this;
		}
		
		private void detach_SolutionBlobs(SolutionBlob entity)
		{
			this.SendPropertyChanging();
			entity.Solution = null;
		}
		
		private void Initialize()
		{
			this._LikeUnlikes = new EntitySet<LikeUnlike>(new Action<LikeUnlike>(this.attach_LikeUnlikes), new Action<LikeUnlike>(this.detach_LikeUnlikes));
			this._SolutionBlobs = new EntitySet<SolutionBlob>(new Action<SolutionBlob>(this.attach_SolutionBlobs), new Action<SolutionBlob>(this.detach_SolutionBlobs));
			this._User = default(EntityRef<User>);
			this._Ticket = default(EntityRef<Ticket>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.SolutionBlob")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SolutionBlob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SolutionBlobId;
		
		private System.Guid _SolutionId;
		
		private System.Guid _BlobId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<BlobEntry> _BlobEntry;
		
		private EntityRef<Solution> _Solution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolutionBlobIdChanging(System.Guid value);
    partial void OnSolutionBlobIdChanged();
    partial void OnSolutionIdChanging(System.Guid value);
    partial void OnSolutionIdChanged();
    partial void OnBlobIdChanging(System.Guid value);
    partial void OnBlobIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public SolutionBlob()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionBlobId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SolutionBlobId
		{
			get
			{
				return this._SolutionBlobId;
			}
			set
			{
				if ((this._SolutionBlobId != value))
				{
					this.OnSolutionBlobIdChanging(value);
					this.SendPropertyChanging();
					this._SolutionBlobId = value;
					this.SendPropertyChanged("SolutionBlobId");
					this.OnSolutionBlobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid SolutionId
		{
			get
			{
				return this._SolutionId;
			}
			set
			{
				if ((this._SolutionId != value))
				{
					if (this._Solution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._SolutionId = value;
					this.SendPropertyChanged("SolutionId");
					this.OnSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid BlobId
		{
			get
			{
				return this._BlobId;
			}
			set
			{
				if ((this._BlobId != value))
				{
					if (this._BlobEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlobIdChanging(value);
					this.SendPropertyChanging();
					this._BlobId = value;
					this.SendPropertyChanged("BlobId");
					this.OnBlobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlobEntry_SolutionBlob", Storage="_BlobEntry", ThisKey="BlobId", OtherKey="BlobId", IsForeignKey=true)]
		public BlobEntry BlobEntry
		{
			get
			{
				return this._BlobEntry.Entity;
			}
			set
			{
				BlobEntry previousValue = this._BlobEntry.Entity;
				if (((previousValue != value) 
							|| (this._BlobEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlobEntry.Entity = null;
						previousValue.SolutionBlobs.Remove(this);
					}
					this._BlobEntry.Entity = value;
					if ((value != null))
					{
						value.SolutionBlobs.Add(this);
						this._BlobId = value.BlobId;
					}
					else
					{
						this._BlobId = default(System.Guid);
					}
					this.SendPropertyChanged("BlobEntry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solution_SolutionBlob", Storage="_Solution", ThisKey="SolutionId", OtherKey="SolutionId", IsForeignKey=true)]
		public Solution Solution
		{
			get
			{
				return this._Solution.Entity;
			}
			set
			{
				Solution previousValue = this._Solution.Entity;
				if (((previousValue != value) 
							|| (this._Solution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solution.Entity = null;
						previousValue.SolutionBlobs.Remove(this);
					}
					this._Solution.Entity = value;
					if ((value != null))
					{
						value.SolutionBlobs.Add(this);
						this._SolutionId = value.SolutionId;
					}
					else
					{
						this._SolutionId = default(System.Guid);
					}
					this.SendPropertyChanged("Solution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BlobEntry = default(EntityRef<BlobEntry>);
			this._Solution = default(EntityRef<Solution>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.SystemConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SystemConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SystemConfigId;
		
		private string _ConfigKey;
		
		private string _ConfigValue;
		
		private string _CreateDate;
		
		private string _EditDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemConfigIdChanging(System.Guid value);
    partial void OnSystemConfigIdChanged();
    partial void OnConfigKeyChanging(string value);
    partial void OnConfigKeyChanged();
    partial void OnConfigValueChanging(string value);
    partial void OnConfigValueChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public SystemConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemConfigId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SystemConfigId
		{
			get
			{
				return this._SystemConfigId;
			}
			set
			{
				if ((this._SystemConfigId != value))
				{
					this.OnSystemConfigIdChanging(value);
					this.SendPropertyChanging();
					this._SystemConfigId = value;
					this.SendPropertyChanged("SystemConfigId");
					this.OnSystemConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigKey", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ConfigKey
		{
			get
			{
				return this._ConfigKey;
			}
			set
			{
				if ((this._ConfigKey != value))
				{
					this.OnConfigKeyChanging(value);
					this.SendPropertyChanging();
					this._ConfigKey = value;
					this.SendPropertyChanged("ConfigKey");
					this.OnConfigKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigValue", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ConfigValue
		{
			get
			{
				return this._ConfigValue;
			}
			set
			{
				if ((this._ConfigValue != value))
				{
					this.OnConfigValueChanging(value);
					this.SendPropertyChanging();
					this._ConfigValue = value;
					this.SendPropertyChanged("ConfigValue");
					this.OnConfigValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.UserOrganization")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserOrganizationId;
		
		private System.Guid _UserId;
		
		private System.Guid _OrganizationId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserOrganizationIdChanging(System.Guid value);
    partial void OnUserOrganizationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public UserOrganization()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserOrganizationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UserOrganizationId
		{
			get
			{
				return this._UserOrganizationId;
			}
			set
			{
				if ((this._UserOrganizationId != value))
				{
					this.OnUserOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._UserOrganizationId = value;
					this.SendPropertyChanged("UserOrganizationId");
					this.OnUserOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_UserOrganization", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.UserOrganizations.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.UserOrganizations.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(System.Guid);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOrganization", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserOrganizations.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserOrganizations.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Organization = default(EntityRef<Organization>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.ErrorDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ErrorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ExceptionId;
		
		private int _ExceptionNumber;
		
		private string _ExceptionMessage;
		
		private string _InnerException;
		
		private string _MethodName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIdChanging(System.Guid value);
    partial void OnExceptionIdChanged();
    partial void OnExceptionNumberChanging(int value);
    partial void OnExceptionNumberChanged();
    partial void OnExceptionMessageChanging(string value);
    partial void OnExceptionMessageChanged();
    partial void OnInnerExceptionChanging(string value);
    partial void OnInnerExceptionChanged();
    partial void OnMethodNameChanging(string value);
    partial void OnMethodNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public ErrorDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ExceptionId
		{
			get
			{
				return this._ExceptionId;
			}
			set
			{
				if ((this._ExceptionId != value))
				{
					this.OnExceptionIdChanging(value);
					this.SendPropertyChanging();
					this._ExceptionId = value;
					this.SendPropertyChanged("ExceptionId");
					this.OnExceptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ExceptionNumber
		{
			get
			{
				return this._ExceptionNumber;
			}
			set
			{
				if ((this._ExceptionNumber != value))
				{
					this.OnExceptionNumberChanging(value);
					this.SendPropertyChanging();
					this._ExceptionNumber = value;
					this.SendPropertyChanged("ExceptionNumber");
					this.OnExceptionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionMessage", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ExceptionMessage
		{
			get
			{
				return this._ExceptionMessage;
			}
			set
			{
				if ((this._ExceptionMessage != value))
				{
					this.OnExceptionMessageChanging(value);
					this.SendPropertyChanging();
					this._ExceptionMessage = value;
					this.SendPropertyChanged("ExceptionMessage");
					this.OnExceptionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerException", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string InnerException
		{
			get
			{
				return this._InnerException;
			}
			set
			{
				if ((this._InnerException != value))
				{
					this.OnInnerExceptionChanging(value);
					this.SendPropertyChanging();
					this._InnerException = value;
					this.SendPropertyChanged("InnerException");
					this.OnInnerExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodName", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MethodName
		{
			get
			{
				return this._MethodName;
			}
			set
			{
				if ((this._MethodName != value))
				{
					this.OnMethodNameChanging(value);
					this.SendPropertyChanging();
					this._MethodName = value;
					this.SendPropertyChanged("MethodName");
					this.OnMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Permission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PermissionId;
		
		private string _Description;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private string _Category;
		
		private EntitySet<RolePermission> _RolePermissions;
		
		private EntitySet<RolePermission1> _RolePermission1s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(System.Guid value);
    partial void OnPermissionIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public Permission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_RolePermissions", ThisKey="PermissionId", OtherKey="PermissionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._RolePermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission1", Storage="_RolePermission1s", ThisKey="PermissionId", OtherKey="PermissionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<RolePermission1> RolePermission1s
		{
			get
			{
				if ((this.serializing 
							&& (this._RolePermission1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RolePermission1s;
			}
			set
			{
				this._RolePermission1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_RolePermission1s(RolePermission1 entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_RolePermission1s(RolePermission1 entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void Initialize()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			this._RolePermission1s = new EntitySet<RolePermission1>(new Action<RolePermission1>(this.attach_RolePermission1s), new Action<RolePermission1>(this.detach_RolePermission1s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RolePermission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RolePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RolePermissionId;
		
		private System.Nullable<System.Guid> _RoleId;
		
		private System.Nullable<System.Guid> _PermissionId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Permission1> _Permission1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolePermissionIdChanging(System.Guid value);
    partial void OnRolePermissionIdChanged();
    partial void OnRoleIdChanging(System.Nullable<System.Guid> value);
    partial void OnRoleIdChanged();
    partial void OnPermissionIdChanging(System.Nullable<System.Guid> value);
    partial void OnPermissionIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RolePermission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePermissionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RolePermissionId
		{
			get
			{
				return this._RolePermissionId;
			}
			set
			{
				if ((this._RolePermissionId != value))
				{
					this.OnRolePermissionIdChanging(value);
					this.SendPropertyChanging();
					this._RolePermissionId = value;
					this.SendPropertyChanged("RolePermissionId");
					this.OnRolePermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if ((this._Permission.HasLoadedOrAssignedValue || this._Permission1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission1_RolePermission", Storage="_Permission1", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public Permission1 Permission1
		{
			get
			{
				return this._Permission1.Entity;
			}
			set
			{
				Permission1 previousValue = this._Permission1.Entity;
				if (((previousValue != value) 
							|| (this._Permission1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission1.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Permission1.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Permission1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Permission = default(EntityRef<Permission>);
			this._Role = default(EntityRef<Role>);
			this._Permission1 = default(EntityRef<Permission1>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.SnoozeAudit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SnoozeAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SnoozeAuditId;
		
		private System.Nullable<System.Guid> _SnoozeId;
		
		private System.Nullable<int> _IntervalTime;
		
		private string _StartDate;
		
		private string _EndDate;
		
		private string _EmailDate;
		
		private System.Nullable<int> _Count;
		
		private string _IsSent;
		
		private string _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSnoozeAuditIdChanging(System.Guid value);
    partial void OnSnoozeAuditIdChanged();
    partial void OnSnoozeIdChanging(System.Nullable<System.Guid> value);
    partial void OnSnoozeIdChanged();
    partial void OnIntervalTimeChanging(System.Nullable<int> value);
    partial void OnIntervalTimeChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(string value);
    partial void OnEndDateChanged();
    partial void OnEmailDateChanging(string value);
    partial void OnEmailDateChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnIsSentChanging(string value);
    partial void OnIsSentChanged();
    partial void OnTimestampChanging(string value);
    partial void OnTimestampChanged();
    #endregion
		
		public SnoozeAudit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozeAuditId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SnoozeAuditId
		{
			get
			{
				return this._SnoozeAuditId;
			}
			set
			{
				if ((this._SnoozeAuditId != value))
				{
					this.OnSnoozeAuditIdChanging(value);
					this.SendPropertyChanging();
					this._SnoozeAuditId = value;
					this.SendPropertyChanged("SnoozeAuditId");
					this.OnSnoozeAuditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoozeId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> SnoozeId
		{
			get
			{
				return this._SnoozeId;
			}
			set
			{
				if ((this._SnoozeId != value))
				{
					this.OnSnoozeIdChanging(value);
					this.SendPropertyChanging();
					this._SnoozeId = value;
					this.SendPropertyChanged("SnoozeId");
					this.OnSnoozeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalTime", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> IntervalTime
		{
			get
			{
				return this._IntervalTime;
			}
			set
			{
				if ((this._IntervalTime != value))
				{
					this.OnIntervalTimeChanging(value);
					this.SendPropertyChanging();
					this._IntervalTime = value;
					this.SendPropertyChanged("IntervalTime");
					this.OnIntervalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailDate", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string EmailDate
		{
			get
			{
				return this._EmailDate;
			}
			set
			{
				if ((this._EmailDate != value))
				{
					this.OnEmailDateChanging(value);
					this.SendPropertyChanging();
					this._EmailDate = value;
					this.SendPropertyChanged("EmailDate");
					this.OnEmailDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string IsSent
		{
			get
			{
				return this._IsSent;
			}
			set
			{
				if ((this._IsSent != value))
				{
					this.OnIsSentChanging(value);
					this.SendPropertyChanging();
					this._IsSent = value;
					this.SendPropertyChanged("IsSent");
					this.OnIsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.[User]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _HashedPassword;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<LikeUnlike> _LikeUnlikes;
		
		private EntitySet<Problem> _Problems;
		
		private EntitySet<RecapSettingUser> _RecapSettingUsers;
		
		private EntitySet<Snooze> _Snoozes;
		
		private EntitySet<Solution> _Solutions;
		
		private EntitySet<UserOrganization> _UserOrganizations;
		
		private EntitySet<TicketComment> _TicketComments;
		
		private EntitySet<DeviceDetail> _DeviceDetails;
		
		private EntitySet<Ticket> _Tickets;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnHashedPasswordChanging(string value);
    partial void OnHashedPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this.OnHashedPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashedPassword = value;
					this.SendPropertyChanged("HashedPassword");
					this.OnHashedPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(75)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserRole", Storage="_UserRoles", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LikeUnlike", Storage="_LikeUnlikes", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<LikeUnlike> LikeUnlikes
		{
			get
			{
				if ((this.serializing 
							&& (this._LikeUnlikes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LikeUnlikes;
			}
			set
			{
				this._LikeUnlikes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Problem", Storage="_Problems", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Problem> Problems
		{
			get
			{
				if ((this.serializing 
							&& (this._Problems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecapSettingUser", Storage="_RecapSettingUsers", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<RecapSettingUser> RecapSettingUsers
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingUsers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingUsers;
			}
			set
			{
				this._RecapSettingUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Snooze", Storage="_Snoozes", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Snooze> Snoozes
		{
			get
			{
				if ((this.serializing 
							&& (this._Snoozes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Snoozes;
			}
			set
			{
				this._Snoozes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Solution", Storage="_Solutions", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<Solution> Solutions
		{
			get
			{
				if ((this.serializing 
							&& (this._Solutions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Solutions;
			}
			set
			{
				this._Solutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOrganization", Storage="_UserOrganizations", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<UserOrganization> UserOrganizations
		{
			get
			{
				if ((this.serializing 
							&& (this._UserOrganizations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserOrganizations;
			}
			set
			{
				this._UserOrganizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TicketComment", Storage="_TicketComments", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<TicketComment> TicketComments
		{
			get
			{
				if ((this.serializing 
							&& (this._TicketComments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TicketComments;
			}
			set
			{
				this._TicketComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DeviceDetail", Storage="_DeviceDetails", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<DeviceDetail> DeviceDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._DeviceDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DeviceDetails;
			}
			set
			{
				this._DeviceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Tickets", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				if ((this.serializing 
							&& (this._Tickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_LikeUnlikes(LikeUnlike entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_LikeUnlikes(LikeUnlike entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Problems(Problem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Problems(Problem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RecapSettingUsers(RecapSettingUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RecapSettingUsers(RecapSettingUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Snoozes(Snooze entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Snoozes(Snooze entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Solutions(Solution entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Solutions(Solution entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserOrganizations(UserOrganization entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserOrganizations(UserOrganization entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DeviceDetails(DeviceDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DeviceDetails(DeviceDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._LikeUnlikes = new EntitySet<LikeUnlike>(new Action<LikeUnlike>(this.attach_LikeUnlikes), new Action<LikeUnlike>(this.detach_LikeUnlikes));
			this._Problems = new EntitySet<Problem>(new Action<Problem>(this.attach_Problems), new Action<Problem>(this.detach_Problems));
			this._RecapSettingUsers = new EntitySet<RecapSettingUser>(new Action<RecapSettingUser>(this.attach_RecapSettingUsers), new Action<RecapSettingUser>(this.detach_RecapSettingUsers));
			this._Snoozes = new EntitySet<Snooze>(new Action<Snooze>(this.attach_Snoozes), new Action<Snooze>(this.detach_Snoozes));
			this._Solutions = new EntitySet<Solution>(new Action<Solution>(this.attach_Solutions), new Action<Solution>(this.detach_Solutions));
			this._UserOrganizations = new EntitySet<UserOrganization>(new Action<UserOrganization>(this.attach_UserOrganizations), new Action<UserOrganization>(this.detach_UserOrganizations));
			this._TicketComments = new EntitySet<TicketComment>(new Action<TicketComment>(this.attach_TicketComments), new Action<TicketComment>(this.detach_TicketComments));
			this._DeviceDetails = new EntitySet<DeviceDetail>(new Action<DeviceDetail>(this.attach_DeviceDetails), new Action<DeviceDetail>(this.detach_DeviceDetails));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.RolePermission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RolePermission1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RolePermissionId;
		
		private System.Guid _RoleId;
		
		private System.Guid _PermissionId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Permission1> _Permission1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolePermissionIdChanging(System.Guid value);
    partial void OnRolePermissionIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnPermissionIdChanging(System.Guid value);
    partial void OnPermissionIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public RolePermission1()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePermissionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid RolePermissionId
		{
			get
			{
				return this._RolePermissionId;
			}
			set
			{
				if ((this._RolePermissionId != value))
				{
					this.OnRolePermissionIdChanging(value);
					this.SendPropertyChanging();
					this._RolePermissionId = value;
					this.SendPropertyChanged("RolePermissionId");
					this.OnRolePermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if ((this._Permission.HasLoadedOrAssignedValue || this._Permission1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission1", Storage="_Permission", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.RolePermission1s.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.RolePermission1s.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(System.Guid);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission1", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RolePermission1s.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RolePermission1s.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission1_RolePermission1", Storage="_Permission1", ThisKey="PermissionId", OtherKey="PermissionId", IsForeignKey=true)]
		public Permission1 Permission1
		{
			get
			{
				return this._Permission1.Entity;
			}
			set
			{
				Permission1 previousValue = this._Permission1.Entity;
				if (((previousValue != value) 
							|| (this._Permission1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission1.Entity = null;
						previousValue.RolePermission1s.Remove(this);
					}
					this._Permission1.Entity = value;
					if ((value != null))
					{
						value.RolePermission1s.Add(this);
						this._PermissionId = value.PermissionId;
					}
					else
					{
						this._PermissionId = default(System.Guid);
					}
					this.SendPropertyChanged("Permission1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Permission = default(EntityRef<Permission>);
			this._Role = default(EntityRef<Role>);
			this._Permission1 = default(EntityRef<Permission1>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Permission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Permission1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PermissionId;
		
		private string _Category;
		
		private string _Description;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntitySet<RolePermission> _RolePermissions;
		
		private EntitySet<RolePermission1> _RolePermission1s;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionIdChanging(System.Guid value);
    partial void OnPermissionIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public Permission1()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission1_RolePermission", Storage="_RolePermissions", ThisKey="PermissionId", OtherKey="PermissionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				if ((this.serializing 
							&& (this._RolePermissions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission1_RolePermission1", Storage="_RolePermission1s", ThisKey="PermissionId", OtherKey="PermissionId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<RolePermission1> RolePermission1s
		{
			get
			{
				if ((this.serializing 
							&& (this._RolePermission1s.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RolePermission1s;
			}
			set
			{
				this._RolePermission1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission1 = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission1 = null;
		}
		
		private void attach_RolePermission1s(RolePermission1 entity)
		{
			this.SendPropertyChanging();
			entity.Permission1 = this;
		}
		
		private void detach_RolePermission1s(RolePermission1 entity)
		{
			this.SendPropertyChanging();
			entity.Permission1 = null;
		}
		
		private void Initialize()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			this._RolePermission1s = new EntitySet<RolePermission1>(new Action<RolePermission1>(this.attach_RolePermission1s), new Action<RolePermission1>(this.detach_RolePermission1s));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.TicketComment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TicketComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TicketCommentId;
		
		private System.Nullable<System.Guid> _TicketId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _Comment;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<Ticket> _Ticket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicketCommentIdChanging(System.Guid value);
    partial void OnTicketCommentIdChanged();
    partial void OnTicketIdChanging(System.Nullable<System.Guid> value);
    partial void OnTicketIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    #endregion
		
		public TicketComment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketCommentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TicketCommentId
		{
			get
			{
				return this._TicketCommentId;
			}
			set
			{
				if ((this._TicketCommentId != value))
				{
					this.OnTicketCommentIdChanging(value);
					this.SendPropertyChanging();
					this._TicketCommentId = value;
					this.SendPropertyChanged("TicketCommentId");
					this.OnTicketCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TicketComment", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TicketComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TicketComments.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_TicketComment", Storage="_Ticket", ThisKey="TicketId", OtherKey="TicketId", IsForeignKey=true)]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.TicketComments.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.TicketComments.Add(this);
						this._TicketId = value.TicketId;
					}
					else
					{
						this._TicketId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._Ticket = default(EntityRef<Ticket>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.DeviceDetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DeviceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DeviceDetailId;
		
		private string _UDID;
		
		private string _DeviceToken;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Nullable<System.Guid> _UserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceDetailIdChanging(System.Guid value);
    partial void OnDeviceDetailIdChanged();
    partial void OnUDIDChanging(string value);
    partial void OnUDIDChanged();
    partial void OnDeviceTokenChanging(string value);
    partial void OnDeviceTokenChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    #endregion
		
		public DeviceDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceDetailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid DeviceDetailId
		{
			get
			{
				return this._DeviceDetailId;
			}
			set
			{
				if ((this._DeviceDetailId != value))
				{
					this.OnDeviceDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceDetailId = value;
					this.SendPropertyChanged("DeviceDetailId");
					this.OnDeviceDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDID", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UDID
		{
			get
			{
				return this._UDID;
			}
			set
			{
				if ((this._UDID != value))
				{
					this.OnUDIDChanging(value);
					this.SendPropertyChanging();
					this._UDID = value;
					this.SendPropertyChanged("UDID");
					this.OnUDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceToken", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DeviceToken
		{
			get
			{
				return this._DeviceToken;
			}
			set
			{
				if ((this._DeviceToken != value))
				{
					this.OnDeviceTokenChanging(value);
					this.SendPropertyChanging();
					this._DeviceToken = value;
					this.SendPropertyChanged("DeviceToken");
					this.OnDeviceTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DeviceDetail", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DeviceDetails.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DeviceDetails.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Category")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CategoryId;
		
		private System.Nullable<System.Guid> _OrganizationId;
		
		private string _CategoryName;
		
		private System.Data.Linq.Binary _CategoryIcon;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private string _Description;
		
		private EntitySet<RecapSettingCategory> _RecapSettingCategories;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(System.Guid value);
    partial void OnCategoryIdChanged();
    partial void OnOrganizationIdChanging(System.Nullable<System.Guid> value);
    partial void OnOrganizationIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategoryIconChanging(System.Data.Linq.Binary value);
    partial void OnCategoryIconChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Category()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.Guid> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryIcon", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary CategoryIcon
		{
			get
			{
				return this._CategoryIcon;
			}
			set
			{
				if ((this._CategoryIcon != value))
				{
					this.OnCategoryIconChanging(value);
					this.SendPropertyChanging();
					this._CategoryIcon = value;
					this.SendPropertyChanged("CategoryIcon");
					this.OnCategoryIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_RecapSettingCategory", Storage="_RecapSettingCategories", ThisKey="CategoryId", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<RecapSettingCategory> RecapSettingCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._RecapSettingCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecapSettingCategories;
			}
			set
			{
				this._RecapSettingCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Ticket", Storage="_Tickets", ThisKey="CategoryId", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				if ((this.serializing 
							&& (this._Tickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Category", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecapSettingCategories(RecapSettingCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_RecapSettingCategories(RecapSettingCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void Initialize()
		{
			this._RecapSettingCategories = new EntitySet<RecapSettingCategory>(new Action<RecapSettingCategory>(this.attach_RecapSettingCategories), new Action<RecapSettingCategory>(this.detach_RecapSettingCategories));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Contact")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ContactId;
		
		private System.Guid _OrganizationId;
		
		private string _ContactName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _CallbackNumber;
		
		private System.Nullable<System.Guid> _LocationId;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private string _JobTitle;
		
		private string _Cell;
		
		private string _Notes;
		
		private string _CallbackExtension;
		
		private string _PhoeExtension;
		
		private string _CellExtension;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIdChanging(System.Guid value);
    partial void OnContactIdChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCallbackNumberChanging(string value);
    partial void OnCallbackNumberChanged();
    partial void OnLocationIdChanging(System.Nullable<System.Guid> value);
    partial void OnLocationIdChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnCellChanging(string value);
    partial void OnCellChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCallbackExtensionChanging(string value);
    partial void OnCallbackExtensionChanged();
    partial void OnPhoeExtensionChanging(string value);
    partial void OnPhoeExtensionChanged();
    partial void OnCellExtensionChanging(string value);
    partial void OnCellExtensionChanged();
    #endregion
		
		public Contact()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(75)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(75)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallbackNumber", DbType="NVarChar(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string CallbackNumber
		{
			get
			{
				return this._CallbackNumber;
			}
			set
			{
				if ((this._CallbackNumber != value))
				{
					this.OnCallbackNumberChanging(value);
					this.SendPropertyChanging();
					this._CallbackNumber = value;
					this.SendPropertyChanged("CallbackNumber");
					this.OnCallbackNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell", DbType="NVarChar(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Cell
		{
			get
			{
				return this._Cell;
			}
			set
			{
				if ((this._Cell != value))
				{
					this.OnCellChanging(value);
					this.SendPropertyChanging();
					this._Cell = value;
					this.SendPropertyChanged("Cell");
					this.OnCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallbackExtension", DbType="NVarChar(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string CallbackExtension
		{
			get
			{
				return this._CallbackExtension;
			}
			set
			{
				if ((this._CallbackExtension != value))
				{
					this.OnCallbackExtensionChanging(value);
					this.SendPropertyChanging();
					this._CallbackExtension = value;
					this.SendPropertyChanged("CallbackExtension");
					this.OnCallbackExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoeExtension", DbType="NVarChar(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string PhoeExtension
		{
			get
			{
				return this._PhoeExtension;
			}
			set
			{
				if ((this._PhoeExtension != value))
				{
					this.OnPhoeExtensionChanging(value);
					this.SendPropertyChanging();
					this._PhoeExtension = value;
					this.SendPropertyChanged("PhoeExtension");
					this.OnPhoeExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellExtension", DbType="NVarChar(25)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string CellExtension
		{
			get
			{
				return this._CellExtension;
			}
			set
			{
				if ((this._CellExtension != value))
				{
					this.OnCellExtensionChanging(value);
					this.SendPropertyChanging();
					this._CellExtension = value;
					this.SendPropertyChanged("CellExtension");
					this.OnCellExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Ticket", Storage="_Tickets", ThisKey="ContactId", OtherKey="ContactId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				if ((this.serializing 
							&& (this._Tickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Contact", Storage="_Location", ThisKey="LocationId", OtherKey="LocationId", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._LocationId = value.LocationId;
					}
					else
					{
						this._LocationId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Contact", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(System.Guid);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void Initialize()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Location = default(EntityRef<Location>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.Ticket")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TicketId;
		
		private int _TicketNum;
		
		private string _TicketNumber;
		
		private bool _IsHelpDoc;
		
		private string _TicketName;
		
		private System.Guid _CategoryId;
		
		private System.Nullable<System.Guid> _ContactId;
		
		private System.Guid _LocationId;
		
		private System.Guid _OrganizationId;
		
		private string _Status;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _ResponseTimeStamp;
		
		private string _CloseDate;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private string _Comments;
		
		private bool _IsHelpDocShare;
		
		private EntitySet<Problem> _Problems;
		
		private EntitySet<SnoozedTicket> _SnoozedTickets;
		
		private EntitySet<Solution> _Solutions;
		
		private EntitySet<TicketComment> _TicketComments;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicketIdChanging(System.Guid value);
    partial void OnTicketIdChanged();
    partial void OnTicketNumChanging(int value);
    partial void OnTicketNumChanged();
    partial void OnTicketNumberChanging(string value);
    partial void OnTicketNumberChanged();
    partial void OnIsHelpDocChanging(bool value);
    partial void OnIsHelpDocChanged();
    partial void OnTicketNameChanging(string value);
    partial void OnTicketNameChanged();
    partial void OnCategoryIdChanging(System.Guid value);
    partial void OnCategoryIdChanged();
    partial void OnContactIdChanging(System.Nullable<System.Guid> value);
    partial void OnContactIdChanged();
    partial void OnLocationIdChanging(System.Guid value);
    partial void OnLocationIdChanged();
    partial void OnOrganizationIdChanging(System.Guid value);
    partial void OnOrganizationIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnResponseTimeStampChanging(string value);
    partial void OnResponseTimeStampChanged();
    partial void OnCloseDateChanging(string value);
    partial void OnCloseDateChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnIsHelpDocShareChanging(bool value);
    partial void OnIsHelpDocShareChanged();
    #endregion
		
		public Ticket()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketNum", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TicketNum
		{
			get
			{
				return this._TicketNum;
			}
			set
			{
				if ((this._TicketNum != value))
				{
					this.OnTicketNumChanging(value);
					this.SendPropertyChanging();
					this._TicketNum = value;
					this.SendPropertyChanged("TicketNum");
					this.OnTicketNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketNumber", AutoSync=AutoSync.Always, DbType="NVarChar(6)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TicketNumber
		{
			get
			{
				return this._TicketNumber;
			}
			set
			{
				if ((this._TicketNumber != value))
				{
					this.OnTicketNumberChanging(value);
					this.SendPropertyChanging();
					this._TicketNumber = value;
					this.SendPropertyChanged("TicketNumber");
					this.OnTicketNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHelpDoc", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsHelpDoc
		{
			get
			{
				return this._IsHelpDoc;
			}
			set
			{
				if ((this._IsHelpDoc != value))
				{
					this.OnIsHelpDocChanging(value);
					this.SendPropertyChanging();
					this._IsHelpDoc = value;
					this.SendPropertyChanged("IsHelpDoc");
					this.OnIsHelpDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string TicketName
		{
			get
			{
				return this._TicketName;
			}
			set
			{
				if ((this._TicketName != value))
				{
					this.OnTicketNameChanging(value);
					this.SendPropertyChanging();
					this._TicketName = value;
					this.SendPropertyChanged("TicketName");
					this.OnTicketNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Guid LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Guid OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseTimeStamp", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string ResponseTimeStamp
		{
			get
			{
				return this._ResponseTimeStamp;
			}
			set
			{
				if ((this._ResponseTimeStamp != value))
				{
					this.OnResponseTimeStampChanging(value);
					this.SendPropertyChanging();
					this._ResponseTimeStamp = value;
					this.SendPropertyChanged("ResponseTimeStamp");
					this.OnResponseTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this.OnCloseDateChanging(value);
					this.SendPropertyChanging();
					this._CloseDate = value;
					this.SendPropertyChanged("CloseDate");
					this.OnCloseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHelpDocShare", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool IsHelpDocShare
		{
			get
			{
				return this._IsHelpDocShare;
			}
			set
			{
				if ((this._IsHelpDocShare != value))
				{
					this.OnIsHelpDocShareChanging(value);
					this.SendPropertyChanging();
					this._IsHelpDocShare = value;
					this.SendPropertyChanged("IsHelpDocShare");
					this.OnIsHelpDocShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Problem", Storage="_Problems", ThisKey="TicketId", OtherKey="TicketId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Problem> Problems
		{
			get
			{
				if ((this.serializing 
							&& (this._Problems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Problems;
			}
			set
			{
				this._Problems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_SnoozedTicket", Storage="_SnoozedTickets", ThisKey="TicketId", OtherKey="TicketId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<SnoozedTicket> SnoozedTickets
		{
			get
			{
				if ((this.serializing 
							&& (this._SnoozedTickets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SnoozedTickets;
			}
			set
			{
				this._SnoozedTickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Solution", Storage="_Solutions", ThisKey="TicketId", OtherKey="TicketId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<Solution> Solutions
		{
			get
			{
				if ((this.serializing 
							&& (this._Solutions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Solutions;
			}
			set
			{
				this._Solutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_TicketComment", Storage="_TicketComments", ThisKey="TicketId", OtherKey="TicketId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<TicketComment> TicketComments
		{
			get
			{
				if ((this.serializing 
							&& (this._TicketComments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TicketComments;
			}
			set
			{
				this._TicketComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Ticket", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Ticket", Storage="_Contact", ThisKey="ContactId", OtherKey="ContactId", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ContactId = value.ContactId;
					}
					else
					{
						this._ContactId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Ticket", Storage="_Location", ThisKey="LocationId", OtherKey="LocationId", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._LocationId = value.LocationId;
					}
					else
					{
						this._LocationId = default(System.Guid);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Ticket", Storage="_Organization", ThisKey="OrganizationId", OtherKey="OrganizationId", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._OrganizationId = value.OrganizationId;
					}
					else
					{
						this._OrganizationId = default(System.Guid);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Problems(Problem entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_Problems(Problem entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
		
		private void attach_SnoozedTickets(SnoozedTicket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_SnoozedTickets(SnoozedTicket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
		
		private void attach_Solutions(Solution entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_Solutions(Solution entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
		
		private void attach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
		
		private void Initialize()
		{
			this._Problems = new EntitySet<Problem>(new Action<Problem>(this.attach_Problems), new Action<Problem>(this.detach_Problems));
			this._SnoozedTickets = new EntitySet<SnoozedTicket>(new Action<SnoozedTicket>(this.attach_SnoozedTickets), new Action<SnoozedTicket>(this.detach_SnoozedTickets));
			this._Solutions = new EntitySet<Solution>(new Action<Solution>(this.attach_Solutions), new Action<Solution>(this.detach_Solutions));
			this._TicketComments = new EntitySet<TicketComment>(new Action<TicketComment>(this.attach_TicketComments), new Action<TicketComment>(this.detach_TicketComments));
			this._Category = default(EntityRef<Category>);
			this._Contact = default(EntityRef<Contact>);
			this._Location = default(EntityRef<Location>);
			this._Organization = default(EntityRef<Organization>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SvcTrkUser.DailyRecap")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DailyRecap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DailyRecapId;
		
		private System.Guid _TechId;
		
		private string _Action;
		
		private string _Object;
		
		private string _Value;
		
		private string _TimeStamp;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Nullable<System.Guid> _LocationId;
		
		private System.Nullable<System.Guid> _CategoryId;
		
		private System.Nullable<System.Guid> _TicketId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDailyRecapIdChanging(System.Guid value);
    partial void OnDailyRecapIdChanged();
    partial void OnTechIdChanging(System.Guid value);
    partial void OnTechIdChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnObjectChanging(string value);
    partial void OnObjectChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    partial void OnCreateDateChanging(string value);
    partial void OnCreateDateChanged();
    partial void OnEditDateChanging(string value);
    partial void OnEditDateChanged();
    partial void OnLocationIdChanging(System.Nullable<System.Guid> value);
    partial void OnLocationIdChanged();
    partial void OnCategoryIdChanging(System.Nullable<System.Guid> value);
    partial void OnCategoryIdChanged();
    partial void OnTicketIdChanging(System.Nullable<System.Guid> value);
    partial void OnTicketIdChanged();
    #endregion
		
		public DailyRecap()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyRecapId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid DailyRecapId
		{
			get
			{
				return this._DailyRecapId;
			}
			set
			{
				if ((this._DailyRecapId != value))
				{
					this.OnDailyRecapIdChanging(value);
					this.SendPropertyChanging();
					this._DailyRecapId = value;
					this.SendPropertyChanged("DailyRecapId");
					this.OnDailyRecapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TechId
		{
			get
			{
				return this._TechId;
			}
			set
			{
				if ((this._TechId != value))
				{
					this.OnTechIdChanging(value);
					this.SendPropertyChanging();
					this._TechId = value;
					this.SendPropertyChanged("TechId");
					this.OnTechIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				if ((this._Object != value))
				{
					this.OnObjectChanging(value);
					this.SendPropertyChanging();
					this._Object = value;
					this.SendPropertyChanged("Object");
					this.OnObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.Guid> TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					this.OnTicketIdChanging(value);
					this.SendPropertyChanging();
					this._TicketId = value;
					this.SendPropertyChanged("TicketId");
					this.OnTicketIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SP_ProblemBlobIconResult
	{
		
		private System.Guid _ProblemId;
		
		private System.Guid _TicketId;
		
		private string _ProblemShortDesc;
		
		private string _ProblemText;
		
		private System.Nullable<int> _LikeCount;
		
		private System.Nullable<int> _UnlikeCount;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<int> _BlobTypeCount;
		
		public SP_ProblemBlobIconResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid ProblemId
		{
			get
			{
				return this._ProblemId;
			}
			set
			{
				if ((this._ProblemId != value))
				{
					this._ProblemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					this._TicketId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemShortDesc", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProblemShortDesc
		{
			get
			{
				return this._ProblemShortDesc;
			}
			set
			{
				if ((this._ProblemShortDesc != value))
				{
					this._ProblemShortDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ProblemText
		{
			get
			{
				return this._ProblemText;
			}
			set
			{
				if ((this._ProblemText != value))
				{
					this._ProblemText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> LikeCount
		{
			get
			{
				return this._LikeCount;
			}
			set
			{
				if ((this._LikeCount != value))
				{
					this._LikeCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> UnlikeCount
		{
			get
			{
				return this._UnlikeCount;
			}
			set
			{
				if ((this._UnlikeCount != value))
				{
					this._UnlikeCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this._EditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobTypeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> BlobTypeCount
		{
			get
			{
				return this._BlobTypeCount;
			}
			set
			{
				if ((this._BlobTypeCount != value))
				{
					this._BlobTypeCount = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SP_SolutionBlobIconResult
	{
		
		private System.Guid _SolutionId;
		
		private System.Guid _TicketId;
		
		private string _SolutionShortDesc;
		
		private string _SolutionText;
		
		private System.Nullable<int> _LikeCount;
		
		private System.Nullable<int> _UnlikeCount;
		
		private string _CreateDate;
		
		private string _EditDate;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<int> _BlobTypeCount;
		
		public SP_SolutionBlobIconResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid SolutionId
		{
			get
			{
				return this._SolutionId;
			}
			set
			{
				if ((this._SolutionId != value))
				{
					this._SolutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TicketId
		{
			get
			{
				return this._TicketId;
			}
			set
			{
				if ((this._TicketId != value))
				{
					this._TicketId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionShortDesc", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SolutionShortDesc
		{
			get
			{
				return this._SolutionShortDesc;
			}
			set
			{
				if ((this._SolutionShortDesc != value))
				{
					this._SolutionShortDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string SolutionText
		{
			get
			{
				return this._SolutionText;
			}
			set
			{
				if ((this._SolutionText != value))
				{
					this._SolutionText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> LikeCount
		{
			get
			{
				return this._LikeCount;
			}
			set
			{
				if ((this._LikeCount != value))
				{
					this._LikeCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlikeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> UnlikeCount
		{
			get
			{
				return this._UnlikeCount;
			}
			set
			{
				if ((this._UnlikeCount != value))
				{
					this._UnlikeCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditDate", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this._EditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlobTypeCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> BlobTypeCount
		{
			get
			{
				return this._BlobTypeCount;
			}
			set
			{
				if ((this._BlobTypeCount != value))
				{
					this._BlobTypeCount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
